# module  generated by Querix Ffg(c) 
# Generated on ${GenerationTS}
# template ${TemplateFile} 

database ${DatabaseName}
DEFINE ${ModuleVarPrefix}program CHAR(30)

MAIN
@Define
@Init 
	DEFER INTERRUPT
	OPTIONS
	help file "${ModuleName}.iem",
	help key ${Helpkey}

	# WHENEVER ERROR CALL ${ErrorMngmtFunction}
	# CALL ui_init(0) 
	LET ${ModuleVarPrefix}program="p_${ModuleName}_${ParentTable}"
	CALL main_${ModuleName}_${ParentTable}()
END MAIN

FUNCTION main_${ModuleName}_${ParentTable} ()
# this function displays all the record in a pick array
	CALL init_program("${DatabaseName}",${ModuleVarPrefix}program)
	CALL ${PrepareQueriesFct}_${ModuleName}_${ParentTable} () # initialize all cursors on master table
	OPEN WINDOW ${LSTPrefix}${ParentTable}
	WITH FORM "${ListFormName}" 

	# initialize the combo boxes
	<Script: 
	$line=sprintf "CALL %s_%s()\n",${InitWidgetsFct},$ModuleName;
	$OutLineNum=ffg_print($SRCHANDLE,$line,$OutLineNum,$FctName,"AdHoc",$TemplateFile,$InLineNum,$SIGNHANDLE); 
	:Script>

	CALL ${ListRecordsFct}${ParentTable}()
	
END FUNCTION

FUNCTION ${ListRecordsFct}${ParentTable} ()
# this function lists all the existing ${ParentTable} records under ARRAY form.
# An element will be chosen by double click
	DEFINE idx,choice,xpos,ypos INTEGER
	DEFINE ${ArrCurrVar},scrline INTEGER
	DEFINE ${LSTPrefix}${PrmryKeyPrefix}_array DYNAMIC ARRAY OF RECORD
		<Script:define_table_variables ($SRCHANDLE,$ParentTable,"pkey","record","pky","    "):Script>
	END RECORD
	DEFINE ${LSTPrefix}records_array DYNAMIC ARRAY OF RECORD
		<Script: define_scr${RecordPrefix}fields($SRCHANDLE,$FormName,$PickListScreenRecord,".*","all",".*","","\t\t") :Script>
	END RECORD

	MESSAGE "${PLMessage}:${PLWAcceptKey}" 
	SET ISOLATION TO DIRTY READ

	DECLARE crs_lst_${ParentTable} CURSOR FOR
	SELECT <Script:print_scr${RecordPrefix}fields($SRCHANDLE,$FormName,$PickListScreenRecord,$ParentTable, ".*",".*",$MstPrefix,"","skip",""):Script>,
		<Script:print_table_columns($SRCHANDLE,${ParentTable},"pkey","","","flat"):Script>
	FROM ${ParentTable}
	ORDER BY 1

	LET idx=1
	FOREACH crs_lst_${ParentTable} INTO ${LSTPrefix}records_array[idx].*,${LSTPrefix}${PrmryKeyPrefix}_array[idx].*
	   LET idx=idx + 1
	   IF idx > 100 THEN
		  EXIT FOREACH
	   END IF
	END FOREACH

	LET idx=idx - 1
	CALL set_count(idx)

	DISPLAY ARRAY ${LSTPrefix}records_array TO ${PickListScreenRecord}.*
		ON ACTION ("doubleclick")
			LET ${ArrCurrVar} = arr_curr ()
			CALL ${ViewEditRecordFct}_${ParentTable} (${LSTPrefix}${PrmryKeyPrefix}_array[${ArrCurrVar}].*)
		AFTER DISPLAY
			IF int_flag THEN
				LET int_flag = false
				CONTINUE DISPLAY
			END IF
	END DISPLAY
	CLOSE WINDOW ${LSTPrefix}${ParentTable}
	SET ISOLATION TO COMMITTED READ
END FUNCTION

<Script:
bld_main_module ( $ModuleName,$MainFormFile,"standalone-form-modern_from_list.mtplt" ) 
:Script>
