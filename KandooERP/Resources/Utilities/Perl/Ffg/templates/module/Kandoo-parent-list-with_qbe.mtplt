<Script:our $PryKeyArray=${LocalVarPrefix} . "pky_array" :Script>noprint
<Script:our $ReturnedPryKeyRec=${LocalVarPrefix}${RecordPrefix}prykey :Script>noprint
# module  generated by KandooERP Ffg(c)
# Generated on ${GenerationTS}
# Template ${ListModuleTemplate} 

GLOBALS "../common/glob_GLOBALS.4gl"
DEFINE ${TypeDataPrefix}prykey_${ParentTable} TYPE AS RECORD 
	<Script:define_PK_columns ($SRCHANDLE,${ParentTable},"pky",$DefineStyle):Script>
END RECORD

FUNCTION ${ListRecordsFct}_qbe_${ModuleName}()
    DEFINE idx,choice INTEGER
    DEFINE ${ArrCurrVar},${ScrLineVar} INTEGER
    DEFINE ${QbeStmtVariable} STRING
    DEFINE ${WhereClauseVariable} STRING
    DEFINE ${PryKeyArray} DYNAMIC ARRAY OF ${TypeDataPrefix}prykey_${ParentTable}   # The array that contains the records' primary keys
    DEFINE ${ReturnedPryKeyRec} ${TypeDataPrefix}prykey_${ParentTable}   # The primary key record that is returned
    DEFINE ${PLWPrefix}attr_array DYNAMIC ARRAY OF RECORD   # the array that contains the records displayed data
        <Script: define_scrrec_fields($SRCHANDLE,$FormName,$PickListScreenRecord,$ParentTable,"all","false","","\t\t") :Script>
    END RECORD
    DEFINE crs_scan_${ParentTable} CURSOR
 
    SET ISOLATION TO DIRTY READ

    INITIALIZE ${QbeStmtVariable} TO NULL
    INITIALIZE ${WhereClauseVariable} TO NULL

    CALL ${PryKeyArray}.Clear()
    CALL ${PLWPrefix}attr_array.Clear()

    MESSAGE "${InputCriteria} for ${ParentTable}"
    CONSTRUCT BY NAME ${WhereClauseVariable} ON <Script: print_scrrec_fields($SRCHANDLE,$FormName,$PickListScreenRecord,$ParentTable,"attr","false","","         ","flat"):Script>
    LET ${QbeStmtVariable} = 
    "SELECT <Script: print_scrrec_fields ($SRCHANDLE,$FormName,$PickListScreenRecord,$ParentTable,"attr","false","","","flat"):Script>,",
    " <Script:print_table_columns($SRCHANDLE,${ParentTable},"","","","pkey","","","flat","",""); :Script> ",
    " FROM ${ParentTable} ",
    " WHERE ${ParentTable}.${GlobalReferenceKey} = ? AND ",
    " ${WhereClauseVariable} CLIPPED,
    " ORDER BY 1"

    CALL crs_scan_${ParentTable}.Declare(${QbeStmtVariable})
    CALL crs_scan_${ParentTable}.Open(${GlobalReferenceRecord}.${GlobalReferenceKey})

    LET idx = 1
    WHILE crs_scan_${ParentTable}.FetchNext(${PLWPrefix}attr_array[idx].*,${PryKeyArray}[idx].*) = 0
        LET idx = idx + 1
    END WHILE
    
    CALL ${PLWPrefix}attr_array.DeleteElement(idx)
    CALL ${PryKeyArray}.DeleteElement(idx)
    LET idx = idx - 1
    
    MESSAGE "${PLMessage} for ${ParentTable} :${PLWAcceptKey}" 
    DISPLAY ARRAY ${PLWPrefix}attr_array
    TO ${PickListScreenRecord}.*
        BEFORE ROW
            LET ${ArrCurrVar}=arr_curr()
            LET ${ScrLineVar}=scr_line()
        AFTER DISPLAY
            IF int_flag THEN
                LET int_flag = false
                LET ${ArrCurrVar}=0
                INITIALIZE ${ReturnedPryKeyRec}.* TO NULL
            ELSE
                LET ${ReturnedPryKeyRec}.* = ${PryKeyArray}[${ArrCurrVar}].*
            END IF
    END DISPLAY

    RETURN ${ArrCurrVar},<Script:print_table_columns($SRCHANDLE,${ParentTable},"","","","pkey","",${ReturnedPryKeyRec},"flat","",""); :Script>
    
END FUNCTION   # ${ListRecordsFct}_qbe_${ModuleName}