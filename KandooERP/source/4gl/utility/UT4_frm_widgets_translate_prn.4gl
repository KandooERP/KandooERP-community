# module  generated by Querix Ffg(c) 		                                                                                    	#@G00001
# Generated on 2018-09-15 11:27:18		                                                                                       	#@G00002
# template E:\Users\BeGooden-IT\Projects\QuerixTools\ffg/templates/parent_standard.mtplt 		                                	#@G00003

############################################################
# GLOBAL Scope Variables
############################################################
GLOBALS "../common/glob_GLOBALS.4gl"
DEFINE m_program CHAR(30) #@g00006 

DEFINE tbl_frm_obj_translate RECORD #@g00008 
	attribute_id LIKE form_attributes.attribute_id, # CHAR(24), #@g00009 
	form_name LIKE form_attributes.form_name, #@g00010 
	table_name LIKE form_attributes.table_name, #@g00010 
	widget_id LIKE form_attributes.widget_id, #@g00011 
	attribute_order LIKE form_attributes.attribute_order, #@g00012 
	widget_type LIKE form_attributes.widget_type, #@g00013 
	attribute_type LIKE form_attributes.attribute_type #char(15) #@g00014 
END RECORD #@g00015 

DEFINE frm_frm_obj_translate RECORD #@g00017 
	attribute_id LIKE form_attributes.attribute_id, # CHAR(24), 
	form_name LIKE form_attributes.form_name, #@g00018 
	table_name LIKE form_attributes.table_name, #@g00010 
	widget_id LIKE form_attributes.widget_id, #@g00019 
	widget_type LIKE form_attributes.widget_type, #@g00020 
	attribute_type LIKE form_attributes.attribute_type #@g00021 
END RECORD #@g00022 

DEFINE sav_frm_obj_translate RECORD #@g00024 
	attribute_id LIKE form_attributes.attribute_id, # CHAR(24) 
	form_name LIKE form_attributes.form_name, #@g00018 
	table_name LIKE form_attributes.table_name, #@g00010 
	widget_id LIKE form_attributes.widget_id, #@g00019 
	widget_type LIKE form_attributes.widget_type, #@g00020 
	attribute_type LIKE form_attributes.attribute_type #@g00021 
END RECORD #@g00029 

#@G00031

MAIN #@g00033 
	DEFER interrupt #@g00034 
	#OPTIONS		                                                                                                                 	#@G00035
	#help file "frm_obj_translate.iem",		                                                                                      	#@G00036
	#help key F1		                                                                                                             	#@G00037

	CALL setModuleId("UT4") 
	CALL ui_init(0) #initial ui init 

	DEFER quit 
	DEFER interrupt 

	CALL authenticate(getmoduleid()) #authenticate 
	CALL init_u_ut() #init utility module 


	# WHENEVER SQL ERROR CALL kandoo_sql_errors_handler		                                                                                       	#@G00039

	LET m_program="p_frm_obj_translate_form_attributes" #@g00041 

	CALL main_frm_obj_translate_form_attributes() #@g00043 

END MAIN #@g00045 

#######################################################		                                                                  	#@G00047
# definition variable sccs		                                                                                               	#@G00048
FUNCTION mc_frm_obj_translate_sccs() #@g00049 
	DEFINE sccs_var CHAR(70) #@g00050 
	LET sccs_var="%W% %D%" #@g00051 
END FUNCTION #@g00052 

FUNCTION main_frm_obj_translate_form_attributes () #@g00054 

	--OPEN WINDOW f_translate_widgets WITH FORM "f_translate_widgets" attributes(border)		                                      	#@G00058
	OPEN WINDOW f_translate_widgets with FORM "U806_translate_widgets_2.fm2" attributes(border) 

	CALL prepare_queries_frm_obj_translate_form_attributes () # INITIALIZE all cursors ON master TABLE #@g00060 
	CALL prepare_queries_frm_obj_translate_attributes_translation() #@g00061 
	#@G00061
	CALL menu_frm_obj_translate_form_attributes() #@g00063 

	CLOSE WINDOW f_translate_widgets #@g00065 

END FUNCTION #@g00067 

######################################################################		                                                   	#@G00069
# menu_frm_obj_translate_form_attributes		                                                                              	#@G00070
# the top level menu 		                                                                                                    	#@G00071
# input arguments: none		                                                                                                  	#@G00072
# output arguments: none		                                                                                                 	#@G00073
FUNCTION menu_frm_obj_translate_form_attributes () #@g00074 
	DEFINE nbsel_form_attributes INTEGER #@g00075 
	DEFINE sql_stmt_status INTEGER #@g00076 
	DEFINE record_num INTEGER #@g00077 
	DEFINE ACTION SMALLINT #@g00078 
	DEFINE xnumber SMALLINT #@g00079 
	DEFINE arr_elem_num SMALLINT #@g00080 
	DEFINE pky_form_attributes RECORD #@g00081 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) #@g00082 
	END RECORD #@g00083 
	DEFINE reply CHAR(3) 
	DEFINE l_datatype CHAR(32) 

	LET nbsel_form_attributes = 0 #@g00085 
	MENU "form_attributes" #@g00086 
		BEFORE MENU #@g00087 
			HIDE option "Next","Previous","View Array attributes_translation","Edit Array attributes_translation" #@g00088 
		COMMAND "Query" "Query data with multiple criteria form_attributes" #@g00089 
			#HELP 1000		                                                                                                              	#@G00090
			MESSAGE "" #@g00091 
			INITIALIZE frm_frm_obj_translate.* TO NULL #@g00092 
			DISPLAY BY NAME frm_frm_obj_translate.* #@g00093 
			HIDE option "Next","Previous" #@g00094 
			#@G00095
			CALL query_form_attributes() RETURNING nbsel_form_attributes #@g00097 
			IF nbsel_form_attributes > 0 THEN #@g00098 
				CALL sql_nxtprev_form_attributes(1) RETURNING sql_stmt_status,pky_form_attributes.* #@g00099 
				LET record_num = 1 #@g00100 
				DISPLAY BY NAME frm_frm_obj_translate.* #@g00101 
				IF nbsel_form_attributes > 1 THEN #@g00102 
					SHOW option "Next" #@g00103 
					NEXT option "Next" #@g00104 
				END IF #@g00105 
				LET l_datatype = get_datatype(frm_frm_obj_translate.widget_type,frm_frm_obj_translate.table_name,frm_frm_obj_translate.widget_id) #@g00105 
				DISPLAY l_datatype TO data_type 
				CALL initialize_array_attributes_translation() #@g00106 
				LET arr_elem_num = display_array_attributes_translation (pky_form_attributes.*,false) #@g00107 
				SHOW option "View Array attributes_translation","Edit Array attributes_translation" #@g00108 
				#@G00108
			ELSE #@g00109 
				ERROR "No row matches the criteria" #@g00110 
				NEXT option "Query" #@g00111 
			END IF #@g00112 

		COMMAND "Next" "Display Next record form_attributes" #@g00114 
			#HELP 2000		                                                                                                              	#@G00115
			MESSAGE "" #@g00116 
			INITIALIZE frm_frm_obj_translate.* TO NULL #@g00117 
			DISPLAY BY NAME frm_frm_obj_translate.* #@g00118 
			#@G00118

			IF record_num < nbsel_form_attributes THEN #@g00120 
				CALL sql_nxtprev_form_attributes(1) RETURNING sql_stmt_status,pky_form_attributes.* #@g00121 
				CASE #@g00122 
					WHEN sql_stmt_status = 0 #@g00123 
						ERROR "FETCH Last record of this selection form_attributes" #@g00124 
					WHEN sql_stmt_status = -1 #@g00125 
						ERROR "This row IS unreachable ",sqlca.sqlcode #@g00126 
					WHEN sql_stmt_status = 1 #@g00127 
						LET record_num = record_num + 1 #@g00128 
						DISPLAY BY NAME frm_frm_obj_translate.* 
						LET l_datatype = get_datatype(frm_frm_obj_translate.widget_type,frm_frm_obj_translate.table_name,frm_frm_obj_translate.widget_id) #@g00105 
						DISPLAY l_datatype TO data_type #@g00129 
						IF record_num >= nbsel_form_attributes THEN #@g00130 
							HIDE option "Next" #@g00131 
						END IF #@g00132 
						IF record_num > 1 THEN #@g00133 
							SHOW option "Previous" #@g00134 
						ELSE #@g00135 
							HIDE option "Previous" #@g00136 
						END IF #@g00137 
						#@G00137
						CALL initialize_array_attributes_translation() #@g00138 
						CALL display_array_attributes_translation (pky_form_attributes.*,false) #@g00139 
						#@G00139
				END CASE #@g00140 
			ELSE #@g00141 
				ERROR " Please SET query criteria previously form_attributes " #@g00142 
				NEXT option "Query" #@g00143 
			END IF #@g00144 

		COMMAND "Previous" "Display Previous Record form_attributes" #@g00146 
			#HELP 3000		                                                                                                              	#@G00147
			MESSAGE "" #@g00148 
			INITIALIZE frm_frm_obj_translate.* TO NULL #@g00149 
			DISPLAY BY NAME frm_frm_obj_translate.* #@g00150 
			#@G00150

			IF record_num > 1 THEN #@g00152 
				CALL sql_nxtprev_form_attributes(-1) RETURNING sql_stmt_status,pky_form_attributes.* #@g00153 
				CASE #@g00154 
					WHEN sql_stmt_status = 0 #@g00155 
						ERROR "FETCH First record of this selection form_attributes" #@g00156 
					WHEN sql_stmt_status < -1 #@g00157 
						ERROR "This row IS unreachable ",sqlca.sqlcode #@g00158 
					WHEN sql_stmt_status = 1 #@g00159 
						LET record_num = record_num - 1 #@g00160 
						CALL set_form_record_frm_obj_translate_f_translate_widgets(tbl_frm_obj_translate.*) #@g00161 
						RETURNING frm_frm_obj_translate.* #@g00162 
						DISPLAY BY NAME frm_frm_obj_translate.* #@g00163 
						LET l_datatype = get_datatype(frm_frm_obj_translate.widget_type,frm_frm_obj_translate.table_name,frm_frm_obj_translate.widget_id) #@g00105 
						DISPLAY l_datatype TO data_type #@g00129 
						IF record_num = 1 THEN #@g00164 
							HIDE option "Previous" #@g00165 
						END IF #@g00166 
						IF record_num < nbsel_form_attributes THEN #@g00167 
							SHOW option "Next" #@g00168 
						ELSE #@g00169 
							HIDE option "Next" #@g00170 
						END IF #@g00171 
						#@G00171
						CALL initialize_array_attributes_translation() #@g00172 
						CALL display_array_attributes_translation (pky_form_attributes.*,false) #@g00173 
						#@G00173
				END CASE #@g00174 
			ELSE #@g00175 
				ERROR " Please SET query criteria previously form_attributes " #@g00176 
				NEXT option "Query" #@g00177 
			END IF #@g00178 

		COMMAND KEY (tab) "View Array attributesattributes_translation" #@g00180 
			CALL display_array_attributes_translation (pky_form_attributes.*,true) #@g00180 
		COMMAND KEY (shift-tab) "Edit Array attributes_translation" #@g00181 
			CALL edit_array_attributes_translation (pky_form_attributes.*) #@g00181 #From HuHo: Function only takes one argument - removed ,true 
			#@G00181

			#	COMMAND "ADD" "Add a new record form_attributes"		                                                                     	#@G00183
			#		#HELP 3000		                                                                                                              	#@G00184
			#		MESSAGE ""		                                                                                                             	#@G00185
			#		CALL Add_form_attributes() RETURNING sql_stmt_status,pky_form_attributes.*		                                       	#@G00186
			#		MESSAGE ""		                                                                                                             	#@G00187
			#		SHOW OPTION "Edit Array attributes_translation"		                                                                       	#@G00187
			#		CALL INITIALIZE_array_attributes_translation()		                                                                        	#@G00188
			#		CALL display_array_attributes_translation (pky_form_attributes.*,FALSE)		                                            	#@G00189
			#@G00189

			#	COMMAND "Modify" "Modify current record form_attributes"		                                                             	#@G00191
			#		#HELP 4000		                                                                                                              	#@G00192
			#		MESSAGE ""		                                                                                                             	#@G00193
			#		IF nbsel_form_attributes THEN		                                                                                       	#@G00194
			#			IF status_pk_form_attributes(pky_form_attributes.*) < 0 THEN		                                                    	#@G00195
			#				ERROR "IS locked "		                                                                                                   	#@G00196
			#				NEXT OPTION "Next"		                                                                                                   	#@G00197
			#			ELSE		                                                                                                                  	#@G00198
			#				LET sql_stmt_status = Modify_form_attributes(pky_form_attributes.*)		                                            	#@G00199
			#			END IF		                                                                                                                	#@G00200
			#		ELSE		                                                                                                                   	#@G00201
			#			ERROR " Please SET query criteria previously form_attributes "		                                                     	#@G00202
			#			NEXT OPTION "Query"		                                                                                                   	#@G00203
			#		END IF		                                                                                                                 	#@G00204

			#   COMMAND "Remove" "Suppress current record form_attributes"		                                                         	#@G00206
			#		#HELP 5000		                                                                                                              	#@G00207
			#		MESSAGE ""		                                                                                                             	#@G00208
			#		IF nbsel_form_attributes THEN		                                                                                       	#@G00209
			#			IF status_pk_form_attributes(pky_form_attributes.*) < 0 THEN		                                                    	#@G00210
			#				ERROR "IS locked "		                                                                                                   	#@G00211
			#				NEXT OPTION "Next"		                                                                                                   	#@G00212
			#			END IF		                                                                                                                	#@G00213
			#			WHILE TRUE		                                                                                                            	#@G00214
			#				CALL confirm_operation(5,10,"Remove") RETURNING action		                                                               	#@G00215
			#				CASE 		                                                                                                                	#@G00216
			#				WHEN action = 0 OR action = 1 		                                                                                       	#@G00217
			#					EXIT WHILE  # degage abandon		                                                                                        	#@G00218
			#				WHEN action = 2   		                                                                                                   	#@G00219
			#					CALL Remove_form_attributes(pky_form_attributes.*)		                                                            	#@G00220
			#					RETURNING sql_stmt_status		                                                                                           	#@G00221
			#					EXIT WHILE		                                                                                                          	#@G00222
			#				END CASE		                                                                                                             	#@G00223
			#			END WHILE		                                                                                                             	#@G00224
			#		ELSE		                                                                                                                   	#@G00225
			#			ERROR "Please SET query criteria previously form_attributes "		                                                      	#@G00226
			#			NEXT OPTION "Query"		                                                                                                   	#@G00227
			#		END IF		                                                                                                                 	#@G00228

		COMMAND "Generate" "Generate new language SET" 
			#HELP 6000
			MESSAGE "" 
			CALL generate_new_language_set() 

		COMMAND "Bulk Translate" "Translate MESSAGEs on bulk mode" 
			#HELP 6000
			MESSAGE "" 
			CALL manage_translations("bulk") 

		COMMAND "Unit Translate" "Translate MESSAGEs one by one" 
			#HELP 6000
			MESSAGE "" 
			CALL manage_translations("one_by_one") 

		COMMAND "Exit" "EXIT PROGRAM" #@g00230 
			#HELP 9000		                                                                                                              	#@G00231
			MESSAGE "" #@g00232 
			EXIT MENU #@g00233 
	END MENU #@g00234 
END FUNCTION #@g00235 

#######################################################################		                                                  	#@G00237
# Query_form_attributes : Query By Example on table form_attributes		                                                	#@G00238
# Input selection criteria,		                                                                                              	#@G00239
# PREPARE the query,		                                                                                                     	#@G00240
# OPEN the data SET		                                                                                                      	#@G00241
#######################################################################		                                                  	#@G00242
FUNCTION query_form_attributes() #@g00243 
	DEFINE rec_form_attributes,where_clause,take_null_clause,notrnsltd_clause STRING #@g00244 
	DEFINE xnumber,tobe_trsltd_messages,trsltd_messages,sql_stmt_status INTEGER #@g00245 
	DEFINE l_pky RECORD #@g00246 
		attribute_id LIKE form_attributes.attribute_id # CHAR(64) 
	END RECORD #@g00248 
	DEFINE reply CHAR(5) 
	DEFINE array_max_size INTEGER 
	DEFINE null_contents,notrnsltd_contents STRING #@g00249 
	LET xnumber = 0 #@g00250 
	MESSAGE "Please input query criteria" #@g00251 
	# INITIALIZE record AND display blank			                                                                                   	#@G00252

	CLEAR FORM 
	LET null_contents = "Null+NNull" 
	LET notrnsltd_contents = "T&NT" 

	LET array_max_size = 1000 
	INITIALIZE frm_frm_obj_translate.* TO NULL #@g00253 
	INPUT BY NAME null_contents,notrnsltd_contents,array_max_size 
	WITHOUT DEFAULTS 
	CONSTRUCT BY NAME where_clause ON form_attributes.attribute_id,form_attributes.form_name,form_attributes.table_name,form_attributes.widget_id, 
	form_attributes.widget_type,form_attributes.attribute_type, 
	attributes_translation.language, attributes_translation.translation 
	## Check whether criteria have been entered		                                                                             	#@G00262
		AFTER CONSTRUCT #@g00263 
			CASE null_contents 
				WHEN "NullOnly" 
					LET take_null_clause = "AND attributes_translation.translation IS NULL " 
				WHEN "NNullOnly" 
					LET take_null_clause = "AND attributes_translation.translation IS NOT NULL " 
				OTHERWISE 
					LET take_null_clause = "" 
			END CASE #@g00273 

			CASE notrnsltd_contents 
			# a translated MESSAGE
				WHEN "NTO" 
					LET notrnsltd_clause = "AND attributes_translation.modif_timestamp IS NULL " 
				WHEN "TO" 
					LET notrnsltd_clause = "AND attributes_translation.modif_timestamp IS NOT NULL " 
				OTHERWISE 
					LET notrnsltd_clause = "" 
			END CASE #@g00273 

			IF NOT field_touched(attributes_translation.language, attributes_translation.translation) AND NOT int_flag THEN #@g00264 
				LET reply = fgl_winbutton("","Select all rows, are you sure?","Yes","Yes|No","question",0) #@g00265 
				CASE #@g00266 
					WHEN reply matches "Yes" #@g00267 
						EXIT CONSTRUCT #@g00268 
					OTHERWISE # saisie d'un critere de selection #@g00269 
						ERROR "Please input a least one criteria" #@g00270 
						CONTINUE CONSTRUCT #@g00271 
				END CASE #@g00272 
			END IF #@g00273 
	END CONSTRUCT 

	IF int_flag = true THEN #@g00276 
		MESSAGE "Quit with quit key" #@g00277 
		LET int_flag=0 #@g00278 
	ELSE #@g00279 
		LET xnumber = get_qbe_count_form_attributes(where_clause,take_null_clause,notrnsltd_clause) #@g00280 
		IF xnumber > 0 THEN #@g00281 
			# Do counts translated / no translated
			LET trsltd_messages = get_qbe_count_form_attributes(where_clause,""," AND attributes_translation.modif_timestamp IS NOT NULL " ) 
			LET tobe_trsltd_messages = get_qbe_count_form_attributes(where_clause,""," AND attributes_translation.modif_timestamp IS NULL " ) 
			DISPLAY BY NAME xnumber,trsltd_messages,tobe_trsltd_messages 

			LET sql_stmt_status = sql_opn_pky_scr_cursform_attributes(where_clause,take_null_clause,notrnsltd_clause) #@g00282 
		ELSE #@g00283 
			RETURN -1 #@g00284 
		END IF #@g00285 

	END IF #@g00287 
	RETURN xnumber #@g00288 
END FUNCTION ## query_form_attributes #@g00289 

####################################################################		                                                     	#@G00291
## Add_form_attributes: add a new form_attributes row		                                                              	#@G00292
FUNCTION add_form_attributes() #@g00293 
	DEFINE sql_stmt_status SMALLINT #@g00294 
	DEFINE row_count SMALLINT #@g00295 
	DEFINE nbre_form_attributes ,action SMALLINT #@g00296 
	#@G00296
	#INITIALIZE pky_form_attributes.* TO NULL		                                                                            	#@G00297
	INITIALIZE tbl_frm_obj_translate.* TO NULL #@g00298 
	INITIALIZE frm_frm_obj_translate.* TO NULL #@g00299 
	INITIALIZE sav_frm_obj_translate.* TO NULL #@g00300 
	#@G00300
	WHILE true #@g00301 
		LET int_flag = false #@g00302 
		INPUT BY NAME frm_frm_obj_translate.form_name, #@g00303 
		frm_frm_obj_translate.table_name, 
		frm_frm_obj_translate.widget_id, #@g00304 
		frm_frm_obj_translate.widget_type, #@g00305 
		frm_frm_obj_translate.attribute_type #@g00306 
		WITHOUT DEFAULTS #@g00307 
		#@G00308
			ON ACTION "Show Form" 
				OPEN WINDOW show_form with FORM frm_frm_obj_translate.form_name attributes(border) #@g00058 

				#@G00309
				#@G00309
		END INPUT #@g00310 
		IF int_flag = true THEN #@g00311 
			# Resign FROM input		                                                                                                   	#@G00312
			LET int_flag=false #@g00313 
			LET frm_frm_obj_translate.* = sav_frm_obj_translate.* #@g00314 
			DISPLAY BY NAME frm_frm_obj_translate.* #@g00315 
			MESSAGE "Quit with quit key Control-C" #@g00316 
			EXIT WHILE #@g00317 
		END IF #@g00318 

		CALL confirm_operation(3,10,MODE_CLASSIC_ADD) RETURNING ACTION #@g00320 
		CASE ACTION #@g00321 
			WHEN 1 # i want TO edit the input, remains displayed 'as is' #@g00322 
				CONTINUE WHILE # ON laisse tout affiche comme tel #@g00323 

			WHEN 2 # ON valide la transaction #@g00325 
				BEGIN WORK #@g00326 
					#@G00326
					CALL set_table_record_frm_obj_translate_form_attributes(1,frm_frm_obj_translate.*) #@g00327 
					RETURNING tbl_frm_obj_translate.* #@g00328 
					CALL sql_insert_form_attributes() RETURNING sql_stmt_status, tbl_frm_obj_translate.attribute_id #@g00329 

					CASE #@g00331 
						WHEN sql_stmt_status = 0 #@g00332 
							MESSAGE "Add form_attributes Successful operation" #@g00333 
						COMMIT WORK #@g00334 
						#@G00334
						WHEN sql_stmt_status < 0 #@g00335 
							CALL display_eric_error("Add form_attributes:failed ") #@g00336 
							ROLLBACK WORK #@g00337 
							#@G00337
					END CASE #@g00338 
					EXIT WHILE #@g00339 

			WHEN 0 #@g00341 
				EXIT WHILE #@g00342 
		END CASE #@g00343 
	END WHILE #@g00344 
	# tbl_frm_obj_translate		                                                                                                 	#@G00345
	RETURN sql_stmt_status, tbl_frm_obj_translate.attribute_id #@g00346 
END FUNCTION ## add_form_attributes #@g00347 


#######################################################################		                                                  	#@G00350
# Modify_form_attributes : Edit a form_attributes RECORD		                                                           	#@G00351
# inbound: table primary key		                                                                                             	#@G00352
FUNCTION modify_form_attributes(pky) #@g00353 
	DEFINE ACTION SMALLINT #@g00354 
	DEFINE sql_stmt_status SMALLINT #@g00355 
	#@G00355
	DEFINE row_count SMALLINT #@g00356 
	DEFINE pky RECORD #@g00357 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00359 

	## check if record can be accessed		                                                                                      	#@G00361
	WHILE true #@g00362 
		LET int_flag = false #@g00363 
		# Save Screen Record VALUES before altering		                                                                            	#@G00364
		LET sav_frm_obj_translate.* = frm_frm_obj_translate.* #@g00365 
		BEGIN WORK #@g00366 
			#@G00366

			INPUT BY NAME frm_frm_obj_translate.form_name, 
			frm_frm_obj_translate.table_name, #@g00368 
			frm_frm_obj_translate.widget_id, #@g00369 
			frm_frm_obj_translate.widget_type, #@g00370 
			frm_frm_obj_translate.attribute_type #@g00371 
			WITHOUT DEFAULTS #@g00372 
			#@G00372

			#@G00373

			#@G00374
			END INPUT #@g00375 
			IF int_flag = true THEN #@g00376 
				LET int_flag=false #@g00377 
				# Restore previous value		                                                                                              	#@G00378
				LET frm_frm_obj_translate.* = sav_frm_obj_translate.* #@g00379 
				DISPLAY BY NAME frm_frm_obj_translate.* #@g00380 
				MESSAGE "$CancelCom Control-C" #@g00381 
				EXIT WHILE #@g00382 
			END IF #@g00383 

			CALL confirm_operation(4,10,"Modify") RETURNING ACTION #@g00385 

			CASE #@g00387 
				WHEN ACTION = 0 #@g00388 
					# Resign, restore previous VALUES		                                                                                     	#@G00389
					LET frm_frm_obj_translate.* = sav_frm_obj_translate.* #@g00390 
					DISPLAY BY NAME frm_frm_obj_translate.* #@g00391 
					EXIT WHILE # CANCEL operation #@g00392 

				WHEN ACTION = 1 #@g00394 
					# Redo		                                                                                                                	#@G00395
					CONTINUE WHILE #@g00396 

				WHEN ACTION = 2 #@g00398 
					# confirm UPDATE		                                                                                                      	#@G00399
					CALL set_table_record_frm_obj_translate_form_attributes(2,frm_frm_obj_translate.*) #@g00400 
					RETURNING tbl_frm_obj_translate.* #@g00401 
					LET sql_stmt_status = sql_update_form_attributes(pky.*) #@g00402 
					CASE #@g00403 
						WHEN sql_stmt_status = 0 #@g00404 
							MESSAGE "Modify form_attributes Successful operation" #@g00405 
						COMMIT WORK #@g00406 
						#@G00406
						WHEN sql_stmt_status < 0 #@g00407 
							CALL display_eric_error("Modify form_attributes:failed ") #@g00408 
							ROLLBACK WORK #@g00409 
							#@G00409
					END CASE #@g00410 
					EXIT WHILE #@g00411 
			END CASE #@g00412 
		END WHILE #@g00413 
		RETURN sql_stmt_status #@g00414 
END FUNCTION ## modify_form_attributes(pky) #@g00415 


#######################################################################		                                                  	#@G00418
# DELETE A form_attributes row		                                                                                        	#@G00419
# inbound: table primary key		                                                                                             	#@G00420
FUNCTION remove_form_attributes(pky) #@g00421 
	DEFINE ACTION SMALLINT #@g00422 
	DEFINE sql_stmt_status SMALLINT #@g00423 
	DEFINE pky RECORD #@g00424 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00426 

	WHILE true #@g00428 
		CALL confirm_operation(5,10,"Remove") RETURNING ACTION #@g00429 
		BEGIN WORK #@g00430 
			#@G00430
			CASE #@g00431 
				WHEN ACTION = 0 OR ACTION = 1 #@g00432 
					EXIT WHILE # degage abandon #@g00433 
				WHEN ACTION = 2 #@g00434 
					CALL sql_delete_form_attributes(pky.*) RETURNING sql_stmt_status #@g00435 
					CASE #@g00436 
						WHEN sql_stmt_status = 0 #@g00437 
							MESSAGE "Remove form_attributes Successful operation" #@g00438 
						COMMIT WORK #@g00439 
						#@G00439
						INITIALIZE frm_frm_obj_translate.* TO NULL #@g00440 
						DISPLAY BY NAME frm_frm_obj_translate.* #@g00441 
						#@G00441
						WHEN sql_stmt_status < 0 #@g00442 
							CALL display_eric_error("Remove form_attributes:failed ") #@g00443 
							ROLLBACK WORK #@g00444 
							#@G00444
					END CASE #@g00445 
					EXIT WHILE #@g00446 
			END CASE #@g00447 
		END WHILE #@g00448 
		RETURN sql_stmt_status #@g00449 
END FUNCTION ## remove_form_attributes(pky) #@g00450 

#########################################################################		                                                	#@G00452
#  Build, PREPARE, DECLARE AND INITIALIZE main queries AND cursors		                                                       	#@G00453
FUNCTION prepare_queries_frm_obj_translate_form_attributes () #@g00454 
	DEFINE query_text STRING #@g00455 

	# PREPARE CURSOR for full master table row contents, access by primary key		                                              	#@G00457
	LET query_text= #@g00458 
	"SELECT attribute_id,form_name,table_name,widget_id,attribute_order,widget_type,attribute_type ", #@g00459 
	" FROM form_attributes ", #@g00460 
	"WHERE attribute_id = ? " #@g00461 

	PREPARE sel_mrw_mform_attributes FROM query_text #@g00463 
	DECLARE crs_row_mform_attributes CURSOR FOR sel_mrw_mform_attributes #@g00464 

	# PREPARE CURSOR for row test / check if locked		                                                                         	#@G00466
	LET query_text= "SELECT attribute_id ", #@g00467 
	" FROM form_attributes ", #@g00468 
	" WHERE attribute_id = ? " #@g00469 

	PREPARE sel_pky_mform_attributes FROM query_text #@g00471 
	DECLARE crs_pky_mform_attributes CURSOR FOR sel_pky_mform_attributes #@g00472 

	# PREPARE INSERT statement		                                                                                              	#@G00474
	LET query_text = #@g00475 
	"INSERT INTO form_attributes ( attribute_id,form_name,table_name,widget_id,attribute_order,widget_type,attribute_type )", #@g00476 
	" VALUES ( ?,?,?,?,?,?,? )" #@g00477 
	PREPARE pr_ins_mform_attributes FROM query_text #@g00478 

	# PREPARE UPDATE statement		                                                                                              	#@G00480
	LET query_text= #@g00481 
	"UPDATE form_attributes ", #@g00482 
	"SET ( form_name,table_name,widget_id,attribute_order,widget_type,attribute_type )", #@g00483 
	" = ( ?,?,?,?,?,? )", #@g00484 
	" WHERE attribute_id = ? " #@g00485 
	PREPARE pr_upd_mform_attributes FROM query_text #@g00486 

	# PREPARE DELETE statement		                                                                                              	#@G00488
	LET query_text= "DELETE FROM form_attributes ", #@g00489 
	" WHERE attribute_id = ? " #@g00490 

	PREPARE pr_del_mform_attributes FROM query_text #@g00492 

	LET query_text = "SELECT CASE ", 
	"when c.coltype = 0 then ('char(' || c.collength || ')') ", 
		" when c.coltype = 256 then ('char(' || c.collength || ') not null') ", 
			" when c.coltype = 1 then 'smallint' ", 
				" when c.coltype = 257 then 'smallint not null' ", 
					" when c.coltype = 258 then 'integer not null' ", 
						" when c.coltype = 258 then 'integer' ", 
							" when c.coltype = 3 then 'float' ", 
								" when c.coltype = 259 then 'float not null' ", 
									" when c.coltype = 4 then 'smallfloat' ", 
										" when c.coltype = 260 then 'smallfloat not null' ", 
											" when c.coltype = 5 then ('DECIMAL(' || ROUND(c.collength/256) || "," MOD(c.collength,256) || ')') ", 
												" when c.coltype = 261 then ('DECIMAL(' || ROUND(c.collength/256) || "," MOD(c.collength,256) || ') not null') ", 
													" when c.coltype = 6 then 'serial' ", 
														" when c.coltype = 262 then 'serial not null' ", 
															" when c.coltype = 262 then 'integer' ", 
																" when c.coltype = 7 then 'date' ", 
																	" when c.coltype = 263 then 'date not null' ", 
																		" when c.coltype = 8 then 'money' ", 
																			" when c.coltype = 264 then 'money not null' ", 
																				" when c.coltype = 9 then 'null' ", 
																					" when c.coltype = 11 then 'byte' ", 
																						" when c.coltype = 267 then 'byte not null' ", 
																							" when c.coltype = 12 then 'text' ", 
																								" when c.coltype = 268 then 'text not null' ", 
																									" when c.coltype = 13 then ('varchar(' || c.collength || ')') ", 
																										" when c.coltype = 269 then ('varchar(' || c.collength || ') not null') ", 
																											" when c.coltype = 14 then ('varchar(' || c.collength || ')') ", 
																												" when c.coltype = 270 then ('varchar(' || c.collength || ') not null') ", 
																													" when mod(c.coltype,256) = 15 then ('nchar(' || c.collength ||')') ", 
																														" when c.coltype = 271 then 'nchar(' || c.collength || ') not null' ", 
																															" when mod(c.coltype,256) = 16 then 'nvarchar(' || c.collength ||')' ", 
																																" when c.coltype = 272 then 'nvarchar(' || c.collength ||') not null' ", 
																																	" when c.coltype = 17 or c.coltype = 273 then 'int8' ", 
																																		" when c.coltype = 18 or c.coltype = 274 then 'serial8' ", 
																																			" when c.coltype = 19 or c.coltype = 275 then 'set' ", 
																																				" when c.coltype = 20 or c.coltype = 276 then 'multiset' ", 
																																					" when c.coltype = 21 or c.coltype = 277 then 'list' ", 
																																						" when c.coltype = 22 or c.coltype = 278 then 'row' ", 
																																							" when c.coltype = 23 or c.coltype = 279 then 'collection' ", 
																																								" when c.coltype = 24 or c.coltype = 280 then 'rowref' ", 
																																									" when (c.coltype = 40) and (c.collength = 2048) then 'lvarchar' ", 
																																										" when (c.coltype = 10) and c.collength = 4363 then 'datetime ' || 'year to fraction(1)' ", 
																																											" when (c.coltype = 266) and c.collength = 4363 then 'datetime ' || 'year to fraction(1) not null' ", 
																																												" when (c.coltype = 10) and c.collength = 4364 then 'datetime ' || ' year to fraction(2)' ", 
																																													" when (c.coltype = 266) and c.collength = 4364 then 'datetime ' || ' year to fraction(2) not null' ", 
																																														" when (c.coltype = 10) and c.collength = 4365 then 'datetime ' || 'year to fraction(3)' ", 
																																															" when (c.coltype = 266) and c.collength = 4365 then 'datetime ' || 'year to fraction(3) not null'", 
																																																" when (c.coltype = 10) and c.collength = 4366 then 'datetime ' || 'year to fraction(4)' ", 
																																																	" when (c.coltype = 266) and c.collength = 4366 then 'datetime ' || 'year to fraction(4) not null'", 
																																																		" when (c.coltype = 10) and c.collength = 4367 then 'datetime ' || 'year to fraction(5)' ", 
																																																			" when (c.coltype = 266) and c.collength = 4367 then 'datetime ' || 'year to fraction(5) not null'", 
																																																				" when (c.coltype = 10) and c.collength = 3594 then 'datetime ' || 'year to second' ", 
																																																					" when (c.coltype = 266) and c.collength = 3594 then 'datetime ' || 'year to second not null'" , 
																																																						" when (c.coltype = 10) and c.collength = 3080 then 'datetime ' || 'year to minute'", 
																																																							" when (c.coltype = 266) and c.collength = 3080 then 'datetime ' || 'year to minute not null'", 
																																																								" when (c.coltype = 10) and c.collength = 2566 then 'datetime ' || 'year to hour'", 
																																																									" when (c.coltype = 266) and c.collength = 2566 then 'datetime ' || 'year to hour not null'", 
																																																										" when (c.coltype = 10) and c.collength = 2052 then 'datetime ' || 'year to day'", 
																																																											" when (c.coltype = 266) and c.collength = 2052 then 'datetime ' || 'year to day not null'", 
																																																												" when (c.coltype = 10) and c.collength = 1538 then 'datetime ' || 'year to month'", 
																																																													" when (c.coltype = 266) and c.collength = 1538 then 'datetime ' || 'year to month not null'", 
																																																														" when (c.coltype = 10) and c.collength = 1024 then 'datetime ' || 'year to year'", 
																																																															" when (c.coltype = 266) and c.collength = 1024 then 'datetime ' || 'year to year not null'", 
																																																																" end as columntype", 
																																																																" from syscolumns c,systables t ", 
																																																																" where c.tabid = t.tabid ", 
																																																																" and t.tabname = ? ", 
																																																																" and c.colname = ? " 

																																																																PREPARE p_datatype FROM query_text 
																																																																DECLARE c_datatype CURSOR FOR p_datatype 

END FUNCTION ## prepare_queries_frm_obj_translate_form_attributes #@g00494 


#########################################################		                                                                	#@G00497
# Open the QBE CURSOR,		                                                                                                   	#@G00498
# counts returned rows_count,		                                                                                            	#@G00499
# OPEN the data SET,		                                                                                                     	#@G00500
# FETCH first row		                                                                                                        	#@G00501
# inbound parameter: query predicate		                                                                                     	#@G00502
# outbound parameters: number of rows retried		                                                                            	#@G00503
FUNCTION get_qbe_count_form_attributes(qry_stmt,take_null_clause,notrnsltd_clause) #@g00504 
	DEFINE qry_stmt,take_null_clause,notrnsltd_clause STRING #@g00505 
	DEFINE rec_form_attributes STRING #@g00506 
	DEFINE row_count INTEGER #@g00507 
	DEFINE lsql_stmt_status INTEGER #@g00508 

	# define primary_key record		                                                                                             	#@G00510
	DEFINE l_pky RECORD #@g00511 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00513 

	LET rec_form_attributes = #@g00515 
	"SELECT count(*) FROM form_attributes,attributes_translation", #@g00516 
	" WHERE ",qry_stmt CLIPPED," ",take_null_clause CLIPPED," ",notrnsltd_clause CLIPPED," ", 
	" AND attributes_translation.attribute_id = form_attributes.attribute_id" #@g00517 


	PREPARE rec_nbr_mform_attributes FROM rec_form_attributes #@g00520 
	DECLARE crs_nbr_mform_attributes CURSOR FOR rec_nbr_mform_attributes #@g00521 

	OPEN crs_nbr_mform_attributes #@g00523 
	SET ISOLATION TO dirty read #@g00524 
	WHENEVER ERROR CONTINUE #@g00525 
	FETCH crs_nbr_mform_attributes INTO row_count #@g00526 
	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00527 
	SET ISOLATION TO committed read #@g00528 

	# if FETCH fails, count = 0, the, get back TO query		                                                                     	#@G00530
	IF sqlca.sqlcode OR row_count = 0 THEN #@g00531 
		LET row_count =0 #@g00532 
	END IF #@g00533 
	FREE crs_nbr_mform_attributes #@g00534 
	RETURN row_count #@g00535 
END FUNCTION ## get_qbe_count_form_attributes #@g00536 

#########################################################		                                                                	#@G00538
# Build the query generated by CONSTRUCT BY NAME,		                                                                        	#@G00539
# Declare AND OPEN the CURSOR		                                                                                            	#@G00540
# inbound param: query predicate		                                                                                         	#@G00541
#outbound parameter: query STATUS		                                                                                        	#@G00542
FUNCTION sql_opn_pky_scr_cursform_attributes(where_clause,take_null_clause,notrnsltd_clause) #@g00543 
	DEFINE qry_stmt,where_clause,take_null_clause,notrnsltd_clause STRING #@g00544 
	DEFINE rec_form_attributes STRING #@g00545 
	DEFINE row_count INTEGER #@g00546 
	DEFINE lsql_stmt_status INTEGER #@g00547 

	# define primary_key record		                                                                                             	#@G00549
	DEFINE l_pky RECORD #@g00550 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00552 

	# display the selected columns		                                                                                          	#@G00554

	LET qry_stmt = "SELECT form_attributes.attribute_id,form_attributes.form_name,form_attributes.table_name,form_attributes.attribute_order ", #@g00556 
	" FROM form_attributes, attributes_translation ", 
	" WHERE ",where_clause CLIPPED," ",take_null_clause CLIPPED," ",notrnsltd_clause CLIPPED," ", 
	" AND form_attributes.attribute_id = attributes_translation.attribute_id ", 
	" GROUP BY form_attributes.attribute_id,form_attributes.form_name,form_attributes.table_name,form_attributes.attribute_order ", 
	" ORDER BY 2,3 " #@g00559 

	PREPARE rech_mform_attributes FROM qry_stmt #@g00561 

	# crs_scrl_mform_attributes : the first CURSOR selects all the primary keys (NOT all the table columns)		              	#@G00563

	DECLARE crs_scrl_mform_attributes SCROLL CURSOR with HOLD FOR rech_mform_attributes #@g00565 

	WHENEVER ERROR CONTINUE #@g00567 
	OPEN crs_scrl_mform_attributes #@g00568 
	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00569 

	RETURN sqlca.sqlcode #@g00571 
END FUNCTION ## sql_opn_pky_scr_cursform_attributes #@g00572 

#######################################################################		                                                  	#@G00574
# sql_nxtprev_form_attributes : FETCH NEXT OR PREVIOUS RECORD		                                                         	#@G00575
FUNCTION sql_nxtprev_form_attributes(offset) #@g00576 
	DEFINE offset SMALLINT #@g00577 
	DEFINE lsql_stmt_status,record_found INTEGER #@g00578 
	DEFINE pky RECORD #@g00579 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00581 

	WHENEVER ERROR CONTINUE #@g00583 
	FETCH relative offset crs_scrl_mform_attributes INTO pky.* #@g00584 
	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00585 

	CASE #@g00587 
		WHEN sqlca.sqlcode = 100 #@g00588 
			LET record_found = 0 #@g00589 
		WHEN sqlca.sqlcode < 0 #@g00590 
			LET record_found = -1 #@g00591 
		OTHERWISE #@g00592 
			LET lsql_stmt_status = 1 #@g00593 
			CALL sql_fetch_full_row_form_attributes (pky.*) #@g00594 
			RETURNING record_found #@g00595 

	END CASE #@g00597 
	RETURN record_found,pky.* #@g00598 
END FUNCTION ## sql_nxtprev_form_attributes #@g00599 

########################################################################		                                                 	#@G00601
# sql_FETCH_full_row_form_attributes : read a complete row accessing by primary key		                                   	#@G00602
# inbound parameter : primary key		                                                                                        	#@G00603
# outbound parameter: sql_stmt_status AND row contents		                                                                   	#@G00604
FUNCTION sql_fetch_full_row_form_attributes(pky_form_attributes) #@g00605 
	DEFINE sql_stmt_status SMALLINT #@g00606 
	DEFINE pky_form_attributes RECORD #@g00607 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00609 
	#@G00609

	# read the table, access on primary key		                                                                                 	#@G00611
	WHENEVER ERROR CONTINUE #@g00612 
	OPEN crs_row_mform_attributes #@g00613 
	USING pky_form_attributes.* #@g00614 

	FETCH crs_row_mform_attributes INTO tbl_frm_obj_translate.* #@g00616 

	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00618 
	CASE #@g00619 
		WHEN sqlca.sqlcode = 100 #@g00620 
			LET sql_stmt_status = 0 #@g00621 
		WHEN sqlca.sqlcode < 0 #@g00622 
			LET sql_stmt_status = -1 #@g00623 
		OTHERWISE #@g00624 
			LET sql_stmt_status = 1 #@g00625 
			CALL set_form_record_frm_obj_translate_f_translate_widgets(tbl_frm_obj_translate.*) #@g00626 
			RETURNING frm_frm_obj_translate.* #@g00627 
			#@G00627
	END CASE #@g00628 
	RETURN sql_stmt_status #@g00629 
END FUNCTION ## sql_fetch_full_row_form_attributes #@g00630 

########################################################################		                                                 	#@G00632
## INSERT in table form_attributes 		                                                                                   	#@G00633
########################################################################		                                                 	#@G00634
FUNCTION sql_insert_form_attributes() #@g00635 
	DEFINE lsql_stmt_status INTEGER #@g00636 
	DEFINE row_count SMALLINT #@g00637 
	DEFINE pky RECORD #@g00638 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00640 
	WHENEVER ERROR CONTINUE #@g00641 
	EXECUTE pr_ins_mform_attributes #@g00642 
	USING tbl_frm_obj_translate.attribute_id, #@g00642 
	tbl_frm_obj_translate.form_name, #@g00642 
	tbl_frm_obj_translate.table_name, 
	tbl_frm_obj_translate.widget_id, #@g00642 
	tbl_frm_obj_translate.attribute_order, #@g00642 
	tbl_frm_obj_translate.widget_type, #@g00642 
	tbl_frm_obj_translate.attribute_type #@g00643 
	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00644 

	IF sqlca.sqlcode < 0 THEN #@g00646 
		LET lsql_stmt_status = -1 #@g00647 
	ELSE #@g00648 
		LET lsql_stmt_status = 0 #@g00649 
		#@G00650

	END IF #@g00652 
	RETURN lsql_stmt_status,pky.* #@g00653 
END FUNCTION ## sql_insert_form_attributes #@g00654 

########################################################################		                                                 	#@G00656
## sql_update_form_attributes :UPDATE form_attributes record		                                                       	#@G00657
FUNCTION sql_update_form_attributes(pky) #@g00658 
	DEFINE lsql_stmt_status INTEGER #@g00659 
	DEFINE pky RECORD #@g00660 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00662 

	WHENEVER ERROR CONTINUE #@g00664 
	EXECUTE pr_upd_mform_attributes #@g00665 
	USING tbl_frm_obj_translate.form_name, #@g00665 
	tbl_frm_obj_translate.table_name, 
	tbl_frm_obj_translate.widget_id, #@g00665 
	tbl_frm_obj_translate.attribute_order, #@g00665 
	tbl_frm_obj_translate.widget_type, #@g00665 
	tbl_frm_obj_translate.attribute_type , #@g00666 
	pky.* #@g00667 

	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00669 
	IF sqlca.sqlcode < 0 THEN #@g00670 

		LET lsql_stmt_status = -1 #@g00672 
	ELSE #@g00673 
		LET lsql_stmt_status = 0 #@g00674 
	END IF #@g00675 
	RETURN lsql_stmt_status #@g00676 
END FUNCTION ## sql_update_form_attributes #@g00677 

########################################################################		                                                 	#@G00679
## sql_delete_form_attributes :delete current row in table form_attributes 		                                        	#@G00680
FUNCTION sql_delete_form_attributes(pky) #@g00681 
	DEFINE lsql_stmt_status SMALLINT #@g00682 
	DEFINE pky RECORD #@g00683 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00685 

	WHENEVER ERROR CONTINUE #@g00687 
	EXECUTE pr_del_mform_attributes #@g00688 
	USING pky.* #@g00689 

	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00691 
	IF sqlca.sqlcode < 0 THEN #@g00692 
		LET lsql_stmt_status = -1 #@g00693 
	ELSE #@g00694 
		LET lsql_stmt_status=0 #@g00695 
	END IF #@g00696 
	RETURN lsql_stmt_status #@g00697 
END FUNCTION ## sql_delete_form_attributes #@g00698 

################################################################################		                                         	#@G00700
#   status_pk_form_attributes : Check if primary key exists		                                                           	#@G00701
# inbound parameter : record of primary key		                                                                              	#@G00702
# outbound parameter:  STATUS > 0  if exists, 0 if no record, < 0 if error		                                               	#@G00703
FUNCTION status_pk_form_attributes(pky) #@g00704 
	DEFINE pky RECORD #@g00705 
		attribute_id LIKE form_attributes.attribute_id # CHAR(24) 
	END RECORD #@g00707 
	DEFINE pk_status INTEGER #@g00708 

	WHENEVER ERROR CONTINUE #@g00710 
	OPEN crs_pky_mform_attributes USING pky.* #@g00711 
	FETCH crs_pky_mform_attributes #@g00712 
	WHENEVER SQL ERROR CALL kandoo_sql_errors_handler #@g00713 

	CASE sqlca.sqlcode #@g00715 
		WHEN 0 #@g00716 
			LET pk_status = 1 #@g00717 
		WHEN 100 #@g00718 
			LET pk_status = 0 #@g00719 
		WHEN sqlca.sqlerrd[2] = 104 #@g00720 
			LET pk_status = -1 # RECORD locked #@g00721 
		WHEN sqlca.sqlcode < 0 #@g00722 
			LET pk_status = sqlca.sqlcode #@g00723 
	END CASE #@g00724 

	RETURN pk_status #@g00726 
END FUNCTION ## status_pkform_attributes #@g00727 

################################################################################################		                         	#@G00729
#   set_form_record_frm_obj_translate_f_translate_widgets: assigns table VALUES TO form fields VALUES		                    	#@G00730
FUNCTION set_form_record_frm_obj_translate_f_translate_widgets(p_rec_tbl_contents) #@g00731 
	DEFINE p_rec_tbl_contents RECORD #@g00739 
		attribute_id LIKE form_attributes.attribute_id, # CHAR(24), #@g00009 
		form_name LIKE form_attributes.form_name, #@g00010 
		table_name LIKE form_attributes.table_name, #@g00010 
		widget_id LIKE form_attributes.widget_id, #@g00011 
		attribute_order LIKE form_attributes.attribute_order, #@g00012 
		widget_type LIKE form_attributes.widget_type, #@g00013 
		attribute_type LIKE form_attributes.attribute_type #char(15) #@g00014 
	END RECORD #@g00746 

	DEFINE frm_contents RECORD #@g00732 
		attribute_id LIKE form_attributes.attribute_id, 
		form_name LIKE form_attributes.form_name, #char(20), 
		table_name LIKE form_attributes.table_name, #@g00733 
		widget_id LIKE form_attributes.widget_id, # CHAR(20), #@g00734 
		widget_type LIKE form_attributes.widget_type, # CHAR(15), #@g00735 
		attribute_type LIKE form_attributes.attribute_type # CHAR(15) #@g00736 
	END RECORD #@g00737 


	INITIALIZE frm_contents.* TO NULL #@g00748 
	LET frm_contents.form_name = p_rec_tbl_contents.form_name #@g00749 
	LET frm_contents.table_name = p_rec_tbl_contents.table_name #@g00749 
	LET frm_contents.widget_id = p_rec_tbl_contents.widget_id #@g00750 
	LET frm_contents.widget_type = p_rec_tbl_contents.widget_type #@g00751 
	LET frm_contents.attribute_type = p_rec_tbl_contents.attribute_type #@g00752 
	LET frm_contents.attribute_id = p_rec_tbl_contents.attribute_id #@g00752 
	#@G00753
	RETURN frm_contents.* #@g00754 
END FUNCTION ## set_form_record_frm_obj_translate_f_translate_widgets #@g00755 

################################################################################################		                         	#@G00757
## set_table_record_frm_obj_translate_form_attributes: assigns form fields value TO table VALUES		                      	#@G00758
FUNCTION set_table_record_frm_obj_translate_form_attributes(sql_stmt,frm_contents) #@g00759 
	DEFINE sql_stmt SMALLINT # 1 => insert, 2 => UPDATE #@g00760 
	DEFINE frm_contents RECORD #@g00761 
		attribute_id LIKE form_attributes.attribute_id, # CHAR(24), #@g00740 
		form_name LIKE form_attributes.form_name, #char(20), 
		table_name LIKE form_attributes.table_name, #@g00733 
		widget_id LIKE form_attributes.widget_id, # CHAR(20), #@g00734 
		widget_type LIKE form_attributes.widget_type, # CHAR(15), #@g00735 
		attribute_type LIKE form_attributes.attribute_type # CHAR(15) #@g00736 
	END RECORD #@g00766 

	DEFINE tbl_contents RECORD #@g00768 
		attribute_id LIKE form_attributes.attribute_id, # CHAR(24), #@g00740 
		form_name LIKE form_attributes.form_name, #char(20), 
		table_name LIKE form_attributes.table_name, #@g00733 
		widget_id LIKE form_attributes.widget_id, # CHAR(20), #@g00734 
		widget_type LIKE form_attributes.widget_type, # CHAR(15), #@g00735 
		attribute_type LIKE form_attributes.attribute_type # CHAR(15) #@g00736 
	END RECORD #@g00775 
	DEFINE match util.match_results 
	INITIALIZE tbl_contents.* TO NULL #@g00777 
	#LET tbl_contents.attribute_id = pky.attribute_id		                                                                         	#@G00778
	LET tbl_contents.form_name = frm_frm_obj_translate.form_name #@g00779 
	LET tbl_contents.widget_id = frm_frm_obj_translate.widget_id #@g00780 
	# LET tbl_contents.attribute_order = your value 		                                                                         	#@G00781
	LET tbl_contents.widget_type = frm_frm_obj_translate.widget_type #@g00782 
	LET tbl_contents.attribute_type = frm_frm_obj_translate.attribute_type #@g00783 
	#@G00784

	RETURN tbl_contents.* #@g00786 
END FUNCTION ## set_table_record_frm_obj_translate_form_attributes #@g00787 


FUNCTION get_datatype(l_widget_type,l_table_name,l_widget_id) 
	DEFINE l_widget_type LIKE form_attributes.widget_type 
	DEFINE l_table_name LIKE form_attributes.table_name 
	DEFINE l_widget_id LIKE form_attributes.widget_id 
	DEFINE l_datatype CHAR(32) 
	DEFINE qry_stmt STRING 
	DEFINE match util.match_results 
	IF (match) THEN 
		OPEN c_datatype USING l_table_name,l_widget_id 
		FETCH c_datatype INTO l_datatype 
		IF sqlca.sqlcode = 0 THEN 
			RETURN l_datatype 
		ELSE 
			RETURN "not found" 
		END IF 
	END IF 
END FUNCTION 
