# module  generated by Querix Ffg(c) 		                                                                                    	#@G00001
# Generated on 2017-10-03 08:09:51		                                                                                       	#@G00002
# template E:\Users\BeGooden-IT\Projects\QuerixTools\Ffg/templates/parent_standard.mtplt 		                                	#@G00003

############################################################
# GLOBAL Scope Variables
############################################################
GLOBALS "../common/glob_GLOBALS.4gl"
DEFINE m_program CHAR(30) #@g00006 

DEFINE tbl_srvr_rqst RECORD #@g00008 
	sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00008 
	cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00008 
	sr_number LIKE service_request.sr_number, # varchar(16) #@g00008 
	sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00008 
	sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00008 
	open_date LIKE service_request.open_date, # DATETIME #@g00008 
	deadline LIKE service_request.deadline, # DATETIME #@g00008 
	abstract LIKE service_request.abstract, # CHAR(80) #@g00008 
	prd_code LIKE service_request.prd_code, # CHAR(13) #@g00008 
	prd_module LIKE service_request.prd_module, # CHAR(15) #@g00008 
	prd_version LIKE service_request.prd_version, # CHAR(20) #@g00008 
	os_code LIKE service_request.os_code, # CHAR(10) #@g00008 
	os_version LIKE service_request.os_version, # CHAR(20) #@g00008 
	cust_references LIKE service_request.cust_references, # varchar(5184) #@g00008 
	serial_number LIKE service_request.serial_number, # CHAR(20) #@g00008 
	sr_type LIKE service_request.sr_type, # CHAR(8) #@g00008 
	severity LIKE service_request.severity, # SMALLINT #@g00008 
	environment LIKE service_request.environment, # CHAR(20) #@g00008 
	description LIKE service_request.description, # lvarchar(32000) #@g00008 
	sr_status LIKE service_request.sr_status, # CHAR(12) #@g00008 
	reported_by LIKE service_request.reported_by, # varchar(64) #@g00008 
	rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00008 
	answer_to LIKE service_request.answer_to, # varchar(64) #@g00008 
	at_channel LIKE service_request.at_channel, # CHAR(6) #@g00008 
	sr_owner LIKE service_request.sr_owner, # varchar(64) #@g00008 
	so_channel LIKE service_request.so_channel, # CHAR(6) #@g00008 
	close_date LIKE service_request.close_date # DATETIME #@g00009 
END RECORD #@g00010 

DEFINE frm_srvr_rqst RECORD #@g00012 
	cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00012 
	sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00012 
	sr_number LIKE service_request.sr_number, # varchar(16) #@g00012 
	sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00012 
	sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00012 
	sr_status LIKE service_request.sr_status, # CHAR(12) #@g00012 
	open_date LIKE service_request.open_date, # DATETIME #@g00012 
	deadline LIKE service_request.deadline, # DATETIME #@g00012 
	close_date LIKE service_request.close_date, # DATETIME #@g00012 
	abstract LIKE service_request.abstract, # CHAR(80) #@g00012 
	sr_type LIKE service_request.sr_type, # CHAR(8) #@g00012 
	severity LIKE service_request.severity, # SMALLINT #@g00012 
	environment LIKE service_request.environment, # CHAR(20) #@g00012 
	prd_code LIKE service_request.prd_code, # CHAR(13) #@g00012 
	prd_module LIKE service_request.prd_module, # CHAR(15) #@g00012 
	prd_version LIKE service_request.prd_version, # CHAR(20) #@g00012 
	os_code LIKE service_request.os_code, # CHAR(10) #@g00012 
	os_version LIKE service_request.os_version, # CHAR(20) #@g00012 
	cust_references LIKE service_request.cust_references, # varchar(5184) #@g00012 
	serial_number LIKE service_request.serial_number, # CHAR(20) #@g00012 
	rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00012 
	reported_by LIKE service_request.reported_by, # varchar(64) #@g00012 
	at_channel LIKE service_request.at_channel, # CHAR(6) #@g00012 
	answer_to LIKE service_request.answer_to, # varchar(64) #@g00012 
	so_channel LIKE service_request.so_channel, # CHAR(6) #@g00012 
	sr_owner LIKE service_request.sr_owner # varchar(64) #@g00013 
END RECORD #@g00014 

DEFINE sav_srvr_rqst RECORD #@g00016 
	cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00016 
	sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00016 
	sr_number LIKE service_request.sr_number, # varchar(16) #@g00016 
	sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00016 
	sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00016 
	sr_status LIKE service_request.sr_status, # CHAR(12) #@g00016 
	open_date LIKE service_request.open_date, # DATETIME #@g00016 
	deadline LIKE service_request.deadline, # DATETIME #@g00016 
	close_date LIKE service_request.close_date, # DATETIME #@g00016 
	abstract LIKE service_request.abstract, # CHAR(80) #@g00016 
	sr_type LIKE service_request.sr_type, # CHAR(8) #@g00016 
	severity LIKE service_request.severity, # SMALLINT #@g00016 
	environment LIKE service_request.environment, # CHAR(20) #@g00016 
	prd_code LIKE service_request.prd_code, # CHAR(13) #@g00016 
	prd_module LIKE service_request.prd_module, # CHAR(15) #@g00016 
	prd_version LIKE service_request.prd_version, # CHAR(20) #@g00016 
	os_code LIKE service_request.os_code, # CHAR(10) #@g00016 
	os_version LIKE service_request.os_version, # CHAR(20) #@g00016 
	cust_references LIKE service_request.cust_references, # varchar(5184) #@g00016 
	serial_number LIKE service_request.serial_number, # CHAR(20) #@g00016 
	rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00016 
	reported_by LIKE service_request.reported_by, # varchar(64) #@g00016 
	at_channel LIKE service_request.at_channel, # CHAR(6) #@g00016 
	answer_to LIKE service_request.answer_to, # varchar(64) #@g00016 
	so_channel LIKE service_request.so_channel, # CHAR(6) #@g00016 
	sr_owner LIKE service_request.sr_owner # varchar(64) #@g00017 
END RECORD #@g00018 

DEFINE lup_srvr_rqst RECORD #@g00019 
	prd_name LIKE supported_products.prd_name, # CHAR(40) #@g00019 
	os_name LIKE operating_systems.os_name # CHAR(30) 
END RECORD #@g00020 
#@G00021

MAIN #@g00023 
	DEFER interrupt #@g00024 
	#OPTIONS		                                                                                                                 	#@G00025
	#help file "srvr_rqst.iem",		                                                                                              	#@G00026
	#help key F1		                                                                                                             	#@G00027

	# WHENEVER ERROR CALL error_mngmt		                                                                                       	#@G00029
	CALL ui_init(0) 		                                                                                                      	#@G00030
	LET m_program="p_srvr_rqst_service_request" #@g00031 

	CALL main_srvr_rqst_service_request() #@g00033 

END MAIN #@g00035 

#######################################################		                                                                  	#@G00037
# definition variable sccs		                                                                                               	#@G00038
FUNCTION mc_srvr_rqst_sccs() #@g00039 
	DEFINE sccs_var CHAR(70) #@g00040 
	LET sccs_var="%W% %D%" #@g00041 
END FUNCTION #@g00042 

FUNCTION main_srvr_rqst_service_request () #@g00044 

	--CALL init_program("kandoodb",m_program) #@g00046 

	OPEN WINDOW f_service_request with FORM "f_service_request" attributes(border) #@g00048 

	CALL prepare_queries_srvr_rqst_service_request () # INITIALIZE all cursors ON master TABLE #@g00050 
	CALL prepare_queries_srvr_rqst_sr_events() #@g00051 
	#@G00051

	CALL menu_srvr_rqst_service_request() #@g00053 

	CLOSE WINDOW f_service_request #@g00055 

END FUNCTION #@g00057 

######################################################################		                                                   	#@G00059
# menu_srvr_rqst_service_request		                                                                                         	#@G00060
# the top level menu 		                                                                                                    	#@G00061
# input arguments: none		                                                                                                  	#@G00062
# output arguments: none		                                                                                                 	#@G00063
FUNCTION menu_srvr_rqst_service_request () #@g00064 
	DEFINE nbsel_service_request INTEGER #@g00065 
	DEFINE sql_stmt_status INTEGER #@g00066 
	DEFINE record_num INTEGER #@g00067 
	DEFINE ACTION SMALLINT #@g00068 
	DEFINE xnumber SMALLINT #@g00069 
	DEFINE arr_elem_num SMALLINT #@g00070 
	DEFINE pky_service_request RECORD #@g00071 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00072 
	END RECORD #@g00073 

	LET nbsel_service_request = 0 #@g00075 
	MENU "service_request" #@g00076 
		BEFORE MENU #@g00077 
			HIDE option "Next","Previous","View Array sr_events","Edit Array sr_events" #@g00078 
		COMMAND "Query" "Query data with multiple criteria service_request" #@g00079 
			#HELP 1000		                                                                                                              	#@G00080
			MESSAGE "" #@g00081 
			INITIALIZE frm_srvr_rqst.* TO NULL #@g00082 
			DISPLAY BY NAME frm_srvr_rqst.* #@g00083 
			HIDE option "Next","Previous" #@g00084 

			INITIALIZE lup_srvr_rqst.* TO NULL #@g00086 
			DISPLAY BY NAME lup_srvr_rqst.* #@g00087 
			#@G00087

			CALL query_service_request() RETURNING nbsel_service_request #@g00089 
			IF nbsel_service_request <>0 THEN #@g00090 
				CALL sql_nxtprev_service_request(1) RETURNING sql_stmt_status,pky_service_request.* #@g00091 
				LET record_num = 1 #@g00092 
				DISPLAY BY NAME frm_srvr_rqst.* #@g00093 
				IF nbsel_service_request > 1 THEN #@g00094 
					SHOW option "Next" #@g00095 
					NEXT option "Next" #@g00096 
				END IF #@g00097 
				DISPLAY BY NAME lup_srvr_rqst.* #@g00098 
				#@G00098
				CALL initialize_array_sr_events() #@g00099 
				LET arr_elem_num = display_array_sr_events (pky_service_request.*,false) #@g00100 
				SHOW option "View Array sr_events","Edit Array sr_events" #@g00101 
				#@G00101
			ELSE #@g00102 
				ERROR "No row matches the criteria" #@g00103 
				NEXT option "Query" #@g00104 
			END IF #@g00105 

		COMMAND "Next" "Display Next record service_request" #@g00107 
			#HELP 2000		                                                                                                              	#@G00108
			MESSAGE "" #@g00109 
			INITIALIZE frm_srvr_rqst.* TO NULL #@g00110 
			DISPLAY BY NAME frm_srvr_rqst.* #@g00111 
			INITIALIZE lup_srvr_rqst.* TO NULL #@g00112 
			DISPLAY BY NAME lup_srvr_rqst.* #@g00113 
			#@G00113

			IF record_num < nbsel_service_request THEN #@g00115 
				CALL sql_nxtprev_service_request(1) RETURNING sql_stmt_status,pky_service_request.* #@g00116 
				CASE #@g00117 
					WHEN sql_stmt_status = 0 #@g00118 
						ERROR "FETCH Last record of this selection service_request" #@g00119 
					WHEN sql_stmt_status = -1 #@g00120 
						ERROR "This row IS unreachable ",sqlca.sqlcode #@g00121 
					WHEN sql_stmt_status = 1 #@g00122 
						LET record_num = record_num + 1 #@g00123 
						DISPLAY BY NAME frm_srvr_rqst.* #@g00124 
						IF record_num >= nbsel_service_request THEN #@g00125 
							HIDE option "Next" #@g00126 
						END IF #@g00127 
						IF record_num > 1 THEN #@g00128 
							SHOW option "Previous" #@g00129 
						ELSE #@g00130 
							HIDE option "Previous" #@g00131 
						END IF #@g00132 
						DISPLAY BY NAME lup_srvr_rqst.* #@g00133 
						#@G00133
						CALL initialize_array_sr_events() #@g00134 
						CALL display_array_sr_events (pky_service_request.*,false) #@g00135 
						#@G00135
				END CASE #@g00136 
			ELSE #@g00137 
				ERROR " Please SET query criteria previously service_request " #@g00138 
				NEXT option "Query" #@g00139 
			END IF #@g00140 

		COMMAND "Previous" "Display Previous Record service_request" #@g00142 
			#HELP 3000		                                                                                                              	#@G00143
			MESSAGE "" #@g00144 
			INITIALIZE frm_srvr_rqst.* TO NULL #@g00145 
			DISPLAY BY NAME frm_srvr_rqst.* #@g00146 
			INITIALIZE lup_srvr_rqst.* TO NULL #@g00147 
			DISPLAY BY NAME lup_srvr_rqst.* #@g00148 
			#@G00148

			IF record_num > 1 THEN #@g00150 
				CALL sql_nxtprev_service_request(-1) RETURNING sql_stmt_status,pky_service_request.* #@g00151 
				CASE #@g00152 
					WHEN sql_stmt_status = 0 #@g00153 
						ERROR "FETCH First record of this selection service_request" #@g00154 
					WHEN sql_stmt_status < -1 #@g00155 
						ERROR "This row IS unreachable ",sqlca.sqlcode #@g00156 
					WHEN sql_stmt_status = 1 #@g00157 
						LET record_num = record_num - 1 #@g00158 
						CALL set_form_record_srvr_rqst_f_service_request(tbl_srvr_rqst.*) #@g00159 
						RETURNING frm_srvr_rqst.* #@g00160 
						DISPLAY BY NAME frm_srvr_rqst.* #@g00161 
						IF record_num = 1 THEN #@g00162 
							HIDE option "Previous" #@g00163 
						END IF #@g00164 
						IF record_num < nbsel_service_request THEN #@g00165 
							SHOW option "Next" #@g00166 
						ELSE #@g00167 
							HIDE option "Next" #@g00168 
						END IF #@g00169 
						DISPLAY BY NAME lup_srvr_rqst.* #@g00170 
						#@G00170
						CALL initialize_array_sr_events() #@g00171 
						CALL display_array_sr_events (pky_service_request.*,false) #@g00172 
						#@G00172
				END CASE #@g00173 
			ELSE #@g00174 
				ERROR " Please SET query criteria previously service_request " #@g00175 
				NEXT option "Query" #@g00176 
			END IF #@g00177 

		COMMAND KEY (tab) "View Array sr_events" #@g00179 
			CALL display_array_sr_events (pky_service_request.*,true) #@g00179 
		COMMAND KEY (shift-tab) "Edit Array sr_events" #@g00180 
			CALL edit_array_sr_events(pky_service_request.*,true) #@g00180 
			#@G00180

		COMMAND "Add" "Add a new record service_request" #@g00182 
			#HELP 3000		                                                                                                              	#@G00183
			MESSAGE "" #@g00184 
			CALL add_service_request() RETURNING sql_stmt_status,pky_service_request.* #@g00185 
			MESSAGE "" #@g00186 
			SHOW option "Edit Array sr_events" #@g00186 
			CALL initialize_array_sr_events() #@g00187 
			CALL display_array_sr_events (pky_service_request.*,false) #@g00188 
			#@G00188

		COMMAND "Modify" "Modify current record service_request" #@g00190 
			#HELP 4000		                                                                                                              	#@G00191
			MESSAGE "" #@g00192 
			IF nbsel_service_request THEN #@g00193 
				IF status_pk_service_request(pky_service_request.*) < 0 THEN #@g00194 
					ERROR "IS locked " #@g00195 
					NEXT option "Next" #@g00196 
				ELSE #@g00197 
					LET sql_stmt_status = modify_service_request(pky_service_request.*) #@g00198 
				END IF #@g00199 
			ELSE #@g00200 
				ERROR " Please SET query criteria previously service_request " #@g00201 
				NEXT option "Query" #@g00202 
			END IF #@g00203 

		COMMAND "Remove" "Suppress current record service_request" #@g00205 
			#HELP 5000		                                                                                                              	#@G00206
			MESSAGE "" #@g00207 
			IF nbsel_service_request THEN #@g00208 
				IF status_pk_service_request(pky_service_request.*) < 0 THEN #@g00209 
					ERROR "IS locked " #@g00210 
					NEXT option "Next" #@g00211 
				END IF #@g00212 
				WHILE true #@g00213 
					CALL confirm_operation(5,10,"Remove") RETURNING ACTION #@g00214 
					CASE #@g00215 
						WHEN ACTION = 0 OR ACTION = 1 #@g00216 
							EXIT WHILE # degage abandon #@g00217 
						WHEN ACTION = 2 #@g00218 
							CALL remove_service_request(pky_service_request.*) #@g00219 
							RETURNING sql_stmt_status #@g00220 
							EXIT WHILE #@g00221 
					END CASE #@g00222 
				END WHILE #@g00223 
			ELSE #@g00224 
				ERROR "Please SET query criteria previously service_request " #@g00225 
				NEXT option "Query" #@g00226 
			END IF #@g00227 

		COMMAND "Exit" "EXIT PROGRAM" #@g00229 
			#HELP 9000		                                                                                                              	#@G00230
			MESSAGE "" #@g00231 
			EXIT MENU #@g00232 
	END MENU #@g00233 
END FUNCTION #@g00234 

#######################################################################		                                                  	#@G00236
# Query_service_request : Query By Example on table service_request		                                                      	#@G00237
# Input selection criteria,		                                                                                              	#@G00238
# PREPARE the query,		                                                                                                     	#@G00239
# OPEN the data SET		                                                                                                      	#@G00240
#######################################################################		                                                  	#@G00241
FUNCTION query_service_request() #@g00242 
	DEFINE rec_service_request,where_clause STRING #@g00243 
	DEFINE xnumber,sql_stmt_status INTEGER #@g00244 
	DEFINE l_pky RECORD #@g00245 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00246 
	END RECORD #@g00247 
	DEFINE reply CHAR(5) #@g00248 
	LET xnumber = 0 #@g00249 
	MESSAGE "Please input query criteria" #@g00250 
	# INITIALIZE record AND display blank		                                                                                   	#@G00251
	INITIALIZE frm_srvr_rqst.* TO NULL #@g00252 
	DISPLAY BY NAME frm_srvr_rqst.* #@g00253 
	INITIALIZE lup_srvr_rqst.* TO NULL #@g00254 
	DISPLAY BY NAME lup_srvr_rqst.* #@g00255 
	#@G00255

	CONSTRUCT BY NAME where_clause ON service_request.cmpy_code, #@g00257 
	service_request.sr_number, #@g00258 
	service_request.sr_parent, #@g00259 
	service_request.sr_duplicate, #@g00260 
	service_request.sr_status, #@g00261 
	service_request.open_date, #@g00262 
	service_request.deadline, #@g00263 
	service_request.close_date, #@g00264 
	service_request.abstract, #@g00265 
	service_request.sr_type, #@g00266 
	service_request.severity, #@g00267 
	service_request.environment, #@g00268 
	service_request.prd_code, #@g00269 
	service_request.prd_module, #@g00270 
	service_request.prd_version, #@g00271 
	service_request.os_code, #@g00272 
	service_request.os_version, #@g00273 
	service_request.cust_references, #@g00274 
	service_request.serial_number, #@g00275 
	service_request.rb_channel, #@g00276 
	service_request.reported_by, #@g00277 
	service_request.at_channel, #@g00278 
	service_request.answer_to, #@g00279 
	service_request.so_channel, #@g00280 
	service_request.sr_owner #@g00281 

	#@G00282

	## Check whether criteria have been entered		                                                                             	#@G00284
		AFTER CONSTRUCT #@g00285 
			IF NOT field_touched(service_request.*) AND NOT int_flag THEN #@g00286 
				LET reply = fgl_winbutton("","Select all rows, are you sure?","Yes","Yes|No","question",0) #@g00287 
				CASE #@g00288 
					WHEN reply matches "Yes" #@g00289 
						EXIT CONSTRUCT #@g00290 
					OTHERWISE # saisie d'un critere de selection #@g00291 
						ERROR "Please input a least one criteria" #@g00292 
						CONTINUE CONSTRUCT #@g00293 
				END CASE #@g00294 
			END IF #@g00295 
	END CONSTRUCT #@g00296 

	IF int_flag = true THEN #@g00298 
		MESSAGE "Quit with quit key" #@g00299 
		LET int_flag=0 #@g00300 
	ELSE #@g00301 
		LET xnumber = get_qbe_count_service_request(where_clause) #@g00302 
		IF xnumber > 0 THEN #@g00303 
			LET sql_stmt_status = sql_opn_pky_scr_cursservice_request(where_clause) #@g00304 
		ELSE #@g00305 
			RETURN -1 #@g00306 
		END IF #@g00307 

	END IF #@g00309 
	RETURN xnumber #@g00310 
END FUNCTION ## query_service_request #@g00311 

####################################################################		                                                     	#@G00313
## Add_service_request: add a new service_request row		                                                                    	#@G00314
FUNCTION add_service_request() #@g00315 
	DEFINE sql_stmt_status SMALLINT #@g00316 
	DEFINE row_count SMALLINT #@g00317 
	DEFINE nbre_service_request ,action SMALLINT #@g00318 
	DEFINE lookup_status INTEGER #@g00319 
	#@G00319
	#INITIALIZE pky_service_request.* TO NULL		                                                                               	#@G00320
	INITIALIZE tbl_srvr_rqst.* TO NULL #@g00321 
	INITIALIZE frm_srvr_rqst.* TO NULL #@g00322 
	INITIALIZE sav_srvr_rqst.* TO NULL #@g00323 
	INITIALIZE lup_srvr_rqst.* TO NULL #@g00324 
	#@G00324
	WHILE true #@g00325 
		LET int_flag = false #@g00326 
		INPUT BY NAME frm_srvr_rqst.cmpy_code, #@g00327 
		frm_srvr_rqst.sr_number, #@g00328 
		frm_srvr_rqst.sr_parent, #@g00329 
		frm_srvr_rqst.sr_duplicate, #@g00330 
		frm_srvr_rqst.sr_status, #@g00331 
		frm_srvr_rqst.open_date, #@g00332 
		frm_srvr_rqst.deadline, #@g00333 
		frm_srvr_rqst.close_date, #@g00334 
		frm_srvr_rqst.abstract, #@g00335 
		frm_srvr_rqst.sr_type, #@g00336 
		frm_srvr_rqst.severity, #@g00337 
		frm_srvr_rqst.environment, #@g00338 
		frm_srvr_rqst.prd_code, #@g00339 
		frm_srvr_rqst.prd_module, #@g00340 
		frm_srvr_rqst.prd_version, #@g00341 
		frm_srvr_rqst.os_code, #@g00342 
		frm_srvr_rqst.os_version, #@g00343 
		frm_srvr_rqst.cust_references, #@g00344 
		frm_srvr_rqst.serial_number, #@g00345 
		frm_srvr_rqst.rb_channel, #@g00346 
		frm_srvr_rqst.reported_by, #@g00347 
		frm_srvr_rqst.at_channel, #@g00348 
		frm_srvr_rqst.answer_to, #@g00349 
		frm_srvr_rqst.so_channel, #@g00350 
		frm_srvr_rqst.sr_owner #@g00351 
		WITHOUT DEFAULTS #@g00352 
		#@G00353
			AFTER FIELD os_code #@g00354 
				IF frm_srvr_rqst.os_code IS NOT NULL THEN #@g00354 
					CALL lookup_service_request_operating_systems(frm_srvr_rqst.os_code) #@g00355 
					RETURNING lookup_status, #@g00355 
					lup_srvr_rqst.os_name #@g00356 
					CASE #@g00357 
						WHEN lookup_status = 0 #@g00358 
							DISPLAY BY NAME #@g00358 
							lup_srvr_rqst.os_name #@g00359 
						WHEN lookup_status = 100 #@g00360 
							ERROR " " #@g00361 
							NEXT FIELD os_code #@g00362 
						WHEN lookup_status < 0 #@g00363 
							ERROR " " #@g00364 
							NEXT FIELD os_code #@g00365 
					END CASE #@g00366 
				END IF #@g00367 
			AFTER FIELD prd_code #@g00368 
				IF frm_srvr_rqst.cmpy_code IS NOT NULL AND frm_srvr_rqst.prd_code IS NOT NULL THEN #@g00368 
					CALL lookup_service_request_supported_products(frm_srvr_rqst.cmpy_code,frm_srvr_rqst.prd_code) #@g00369 
					RETURNING lookup_status, #@g00369 
					lup_srvr_rqst.prd_name #@g00370 
					CASE #@g00371 
						WHEN lookup_status = 0 #@g00372 
							DISPLAY BY NAME #@g00372 
							lup_srvr_rqst.prd_name #@g00373 
						WHEN lookup_status = 100 #@g00374 
							ERROR " " #@g00375 
							NEXT FIELD cmpy_code #@g00376 
						WHEN lookup_status < 0 #@g00377 
							ERROR " " #@g00378 
							NEXT FIELD cmpy_code #@g00379 
					END CASE #@g00380 
				END IF #@g00381 
				#@G00381

				#@G00382
				#@G00382
		END INPUT #@g00383 
		IF int_flag = true THEN #@g00384 
			# Resign FROM input		                                                                                                   	#@G00385
			LET int_flag=false #@g00386 
			LET frm_srvr_rqst.* = sav_srvr_rqst.* #@g00387 
			DISPLAY BY NAME frm_srvr_rqst.* #@g00388 
			MESSAGE "Quit with quit key Control-C" #@g00389 
			EXIT WHILE #@g00390 
		END IF #@g00391 

		CALL confirm_operation(3,10,"Add") RETURNING ACTION #@g00393 
		CASE ACTION #@g00394 
			WHEN 1 # i want TO edit the input, remains displayed 'as is' #@g00395 
				CONTINUE WHILE # ON laisse tout affiche comme tel #@g00396 

			WHEN 2 # ON valide la transaction #@g00398 
				BEGIN WORK #@g00399 
					#@G00399
					CALL set_table_record_srvr_rqst_service_request(1,frm_srvr_rqst.*) #@g00400 
					RETURNING tbl_srvr_rqst.* #@g00401 
					CALL sql_insert_service_request() RETURNING sql_stmt_status, tbl_srvr_rqst.sr_seed #@g00402 

					CASE #@g00404 
						WHEN sql_stmt_status = 0 #@g00405 
							MESSAGE "Add service_request Successful operation" #@g00406 
						COMMIT WORK #@g00407 
						#@G00407
						WHEN sql_stmt_status < 0 #@g00408 
							CALL display_eric_error("Add service_request:failed ") #@g00409 
							ROLLBACK WORK #@g00410 
							#@G00410
					END CASE #@g00411 
					EXIT WHILE #@g00412 

			WHEN 0 #@g00414 
				EXIT WHILE #@g00415 
		END CASE #@g00416 
	END WHILE #@g00417 
	# tbl_srvr_rqst		                                                                                                         	#@G00418
	RETURN sql_stmt_status, tbl_srvr_rqst.sr_seed #@g00419 
END FUNCTION ## add_service_request #@g00420 


#######################################################################		                                                  	#@G00423
# Modify_service_request : Edit a service_request RECORD		                                                                 	#@G00424
# inbound: table primary key		                                                                                             	#@G00425
FUNCTION modify_service_request(pky) #@g00426 
	DEFINE ACTION SMALLINT #@g00427 
	DEFINE sql_stmt_status SMALLINT #@g00428 
	DEFINE lookup_status INTEGER #@g00429 
	#@G00429
	DEFINE row_count SMALLINT #@g00430 
	DEFINE pky RECORD #@g00431 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00432 
	END RECORD #@g00433 

	## check if record can be accessed		                                                                                      	#@G00435
	WHILE true #@g00436 
		LET int_flag = false #@g00437 
		# Save Screen Record VALUES before altering		                                                                            	#@G00438
		LET sav_srvr_rqst.* = frm_srvr_rqst.* #@g00439 
		BEGIN WORK #@g00440 
			#@G00440

			INPUT BY NAME frm_srvr_rqst.cmpy_code, #@g00442 
			frm_srvr_rqst.sr_number, #@g00443 
			frm_srvr_rqst.sr_parent, #@g00444 
			frm_srvr_rqst.sr_duplicate, #@g00445 
			frm_srvr_rqst.sr_status, #@g00446 
			frm_srvr_rqst.open_date, #@g00447 
			frm_srvr_rqst.deadline, #@g00448 
			frm_srvr_rqst.close_date, #@g00449 
			frm_srvr_rqst.abstract, #@g00450 
			frm_srvr_rqst.sr_type, #@g00451 
			frm_srvr_rqst.severity, #@g00452 
			frm_srvr_rqst.environment, #@g00453 
			frm_srvr_rqst.prd_code, #@g00454 
			frm_srvr_rqst.prd_module, #@g00455 
			frm_srvr_rqst.prd_version, #@g00456 
			frm_srvr_rqst.os_code, #@g00457 
			frm_srvr_rqst.os_version, #@g00458 
			frm_srvr_rqst.cust_references, #@g00459 
			frm_srvr_rqst.serial_number, #@g00460 
			frm_srvr_rqst.rb_channel, #@g00461 
			frm_srvr_rqst.reported_by, #@g00462 
			frm_srvr_rqst.at_channel, #@g00463 
			frm_srvr_rqst.answer_to, #@g00464 
			frm_srvr_rqst.so_channel, #@g00465 
			frm_srvr_rqst.sr_owner #@g00466 
			WITHOUT DEFAULTS #@g00467 
				AFTER FIELD os_code #@g00468 
					IF frm_srvr_rqst.os_code IS NOT NULL THEN #@g00468 
						CALL lookup_service_request_operating_systems(frm_srvr_rqst.os_code) #@g00469 
						RETURNING lookup_status, #@g00469 
						lup_srvr_rqst.os_name #@g00470 
						CASE #@g00471 
							WHEN lookup_status = 0 #@g00472 
								DISPLAY BY NAME #@g00472 
								lup_srvr_rqst.os_name #@g00473 
							WHEN lookup_status = 100 #@g00474 
								ERROR " " #@g00475 
								NEXT FIELD os_code #@g00476 
							WHEN lookup_status < 0 #@g00477 
								ERROR " " #@g00478 
								NEXT FIELD os_code #@g00479 
						END CASE #@g00480 
					END IF #@g00481 
				AFTER FIELD prd_code #@g00482 
					IF frm_srvr_rqst.cmpy_code IS NOT NULL AND frm_srvr_rqst.prd_code IS NOT NULL THEN #@g00482 
						CALL lookup_service_request_supported_products(frm_srvr_rqst.cmpy_code,frm_srvr_rqst.prd_code) #@g00483 
						RETURNING lookup_status, #@g00483 
						lup_srvr_rqst.prd_name #@g00484 
						CASE #@g00485 
							WHEN lookup_status = 0 #@g00486 
								DISPLAY BY NAME #@g00486 
								lup_srvr_rqst.prd_name #@g00487 
							WHEN lookup_status = 100 #@g00488 
								ERROR " " #@g00489 
								NEXT FIELD cmpy_code #@g00490 
							WHEN lookup_status < 0 #@g00491 
								ERROR " " #@g00492 
								NEXT FIELD cmpy_code #@g00493 
						END CASE #@g00494 
					END IF #@g00495 
					#@G00495

					#@G00496

					#@G00497
			END INPUT #@g00498 
			IF int_flag = true THEN #@g00499 
				LET int_flag=false #@g00500 
				# Restore previous value		                                                                                              	#@G00501
				LET frm_srvr_rqst.* = sav_srvr_rqst.* #@g00502 
				DISPLAY BY NAME frm_srvr_rqst.* #@g00503 
				MESSAGE "$CancelCom Control-C" #@g00504 
				EXIT WHILE #@g00505 
			END IF #@g00506 

			CALL confirm_operation(4,10,"Modify") RETURNING ACTION #@g00508 

			CASE #@g00510 
				WHEN ACTION = 0 #@g00511 
					# Resign, restore previous VALUES		                                                                                     	#@G00512
					LET frm_srvr_rqst.* = sav_srvr_rqst.* #@g00513 
					DISPLAY BY NAME frm_srvr_rqst.* #@g00514 
					EXIT WHILE # CANCEL operation #@g00515 

				WHEN ACTION = 1 #@g00517 
					# Redo		                                                                                                                	#@G00518
					CONTINUE WHILE #@g00519 

				WHEN ACTION = 2 #@g00521 
					# confirm UPDATE		                                                                                                      	#@G00522
					CALL set_table_record_srvr_rqst_service_request(2,frm_srvr_rqst.*) #@g00523 
					RETURNING tbl_srvr_rqst.* #@g00524 
					LET sql_stmt_status = sql_update_service_request(pky.*) #@g00525 
					CASE #@g00526 
						WHEN sql_stmt_status = 0 #@g00527 
							MESSAGE "Modify service_request Successful operation" #@g00528 
						COMMIT WORK #@g00529 
						#@G00529
						WHEN sql_stmt_status < 0 #@g00530 
							CALL display_eric_error("Modify service_request:failed ") #@g00531 
							ROLLBACK WORK #@g00532 
							#@G00532
					END CASE #@g00533 
					EXIT WHILE #@g00534 
			END CASE #@g00535 
		END WHILE #@g00536 
		RETURN sql_stmt_status #@g00537 
END FUNCTION ## modify_service_request(pky) #@g00538 


#######################################################################		                                                  	#@G00541
# DELETE A service_request row		                                                                                           	#@G00542
# inbound: table primary key		                                                                                             	#@G00543
FUNCTION remove_service_request(pky) #@g00544 
	DEFINE ACTION SMALLINT #@g00545 
	DEFINE sql_stmt_status SMALLINT #@g00546 
	DEFINE pky RECORD #@g00547 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00548 
	END RECORD #@g00549 

	WHILE true #@g00551 
		CALL confirm_operation(5,10,"Remove") RETURNING ACTION #@g00552 
		BEGIN WORK #@g00553 
			#@G00553
			CASE #@g00554 
				WHEN ACTION = 0 OR ACTION = 1 #@g00555 
					EXIT WHILE # degage abandon #@g00556 
				WHEN ACTION = 2 #@g00557 
					CALL sql_delete_service_request(pky.*) RETURNING sql_stmt_status #@g00558 
					CASE #@g00559 
						WHEN sql_stmt_status = 0 #@g00560 
							MESSAGE "Remove service_request Successful operation" #@g00561 
						COMMIT WORK #@g00562 
						#@G00562
						INITIALIZE frm_srvr_rqst.* TO NULL #@g00563 
						DISPLAY BY NAME frm_srvr_rqst.* #@g00564 
						INITIALIZE lup_srvr_rqst.* TO NULL #@g00565 
						INITIALIZE lup_srvr_rqst.* TO NULL #@g00566 
						DISPLAY BY NAME lup_srvr_rqst.* #@g00567 
						#@G00567
						WHEN sql_stmt_status < 0 #@g00568 
							CALL display_eric_error("Remove service_request:failed ") #@g00569 
							ROLLBACK WORK #@g00570 
							#@G00570
					END CASE #@g00571 
					EXIT WHILE #@g00572 
			END CASE #@g00573 
		END WHILE #@g00574 
		RETURN sql_stmt_status #@g00575 
END FUNCTION ## remove_service_request(pky) #@g00576 

#########################################################################		                                                	#@G00578
#  Build, PREPARE, DECLARE AND INITIALIZE main queries AND cursors		                                                       	#@G00579
FUNCTION prepare_queries_srvr_rqst_service_request () #@g00580 
	DEFINE query_text STRING #@g00581 

	# PREPARE CURSOR for full master table row contents, access by primary key		                                              	#@G00583
	LET query_text= #@g00584 
	"SELECT sr_seed,cmpy_code,sr_number,sr_parent,sr_duplicate,open_date,deadline,abstract,prd_code,prd_module,prd_version,os_code,os_version,cust_references,serial_number,sr_type,severity,environment,description,sr_status,reported_by,rb_channel,answer_to,at_channel,sr_owner,so_channel,close_date ", #@g00585 
	" FROM service_request ", #@g00586 
	"WHERE sr_seed = ? " #@g00587 

	PREPARE sel_mrw_mservice_request FROM query_text #@g00589 
	DECLARE crs_row_mservice_request CURSOR FOR sel_mrw_mservice_request #@g00590 

	# PREPARE CURSOR for row test / check if locked		                                                                         	#@G00592
	LET query_text= "SELECT sr_seed ", #@g00593 
	" FROM service_request ", #@g00594 
	" WHERE sr_seed = ? " #@g00595 

	PREPARE sel_pky_mservice_request FROM query_text #@g00597 
	DECLARE crs_pky_mservice_request CURSOR FOR sel_pky_mservice_request #@g00598 

	# PREPARE INSERT statement		                                                                                              	#@G00600
	LET query_text = #@g00601 
	"INSERT INTO service_request ( sr_seed,cmpy_code,sr_number,sr_parent,sr_duplicate,open_date,deadline,abstract,prd_code,prd_module,prd_version,os_code,os_version,cust_references,serial_number,sr_type,severity,environment,description,sr_status,reported_by,rb_channel,answer_to,at_channel,sr_owner,so_channel,close_date )", #@g00602 
	" VALUES ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? )" #@g00603 
	PREPARE pr_ins_mservice_request FROM query_text #@g00604 

	# PREPARE UPDATE statement		                                                                                              	#@G00606
	LET query_text= #@g00607 
	"UPDATE service_request ", #@g00608 
	"SET ( cmpy_code,sr_number,sr_parent,sr_duplicate,open_date,deadline,abstract,prd_code,prd_module,prd_version,os_code,os_version,cust_references,serial_number,sr_type,severity,environment,description,sr_status,reported_by,rb_channel,answer_to,at_channel,sr_owner,so_channel,close_date )", #@g00609 
	" = ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? )", #@g00610 
	" WHERE sr_seed = ? " #@g00611 
	PREPARE pr_upd_mservice_request FROM query_text #@g00612 

	# PREPARE DELETE statement		                                                                                              	#@G00614
	LET query_text= "DELETE FROM service_request ", #@g00615 
	" WHERE sr_seed = ? " #@g00616 

	PREPARE pr_del_mservice_request FROM query_text #@g00618 

END FUNCTION ## prepare_queries_srvr_rqst_service_request #@g00620 


#########################################################		                                                                	#@G00623
# Open the QBE CURSOR,		                                                                                                   	#@G00624
# counts returned rows_count,		                                                                                            	#@G00625
# OPEN the data SET,		                                                                                                     	#@G00626
# FETCH first row		                                                                                                        	#@G00627
# inbound parameter: query predicate		                                                                                     	#@G00628
# outbound parameters: number of rows retried		                                                                            	#@G00629
FUNCTION get_qbe_count_service_request(qry_stmt) #@g00630 
	DEFINE qry_stmt STRING #@g00631 
	DEFINE rec_service_request STRING #@g00632 
	DEFINE row_count INTEGER #@g00633 
	DEFINE lsql_stmt_status INTEGER #@g00634 

	# define primary_key record		                                                                                             	#@G00636
	DEFINE l_pky RECORD #@g00637 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00638 
	END RECORD #@g00639 

	LET rec_service_request = #@g00641 
	"SELECT count(*) FROM service_request", #@g00642 
	" WHERE ",qry_stmt clipped #@g00643 


	PREPARE rec_nbr_mservice_request FROM rec_service_request #@g00646 
	DECLARE crs_nbr_mservice_request CURSOR FOR rec_nbr_mservice_request #@g00647 

	OPEN crs_nbr_mservice_request #@g00649 
	SET ISOLATION TO dirty read #@g00650 
	WHENEVER ERROR CONTINUE #@g00651 
	FETCH crs_nbr_mservice_request INTO row_count #@g00652 
	WHENEVER ERROR CALL error_mngmt #@g00653 
	SET ISOLATION TO committed read #@g00654 

	# if FETCH fails, count = 0, the, get back TO query		                                                                     	#@G00656
	IF sqlca.sqlcode OR row_count = 0 THEN #@g00657 
		LET row_count =0 #@g00658 
	END IF #@g00659 
	FREE crs_nbr_mservice_request #@g00660 
	RETURN row_count #@g00661 
END FUNCTION ## get_qbe_count_service_request #@g00662 

#########################################################		                                                                	#@G00664
# Build the query generated by CONSTRUCT BY NAME,		                                                                        	#@G00665
# Declare AND OPEN the CURSOR		                                                                                            	#@G00666
# inbound param: query predicate		                                                                                         	#@G00667
#outbound parameter: query STATUS		                                                                                        	#@G00668
FUNCTION sql_opn_pky_scr_cursservice_request(qry_stmt) #@g00669 
	DEFINE qry_stmt STRING #@g00670 
	DEFINE rec_service_request STRING #@g00671 
	DEFINE row_count INTEGER #@g00672 
	DEFINE lsql_stmt_status INTEGER #@g00673 

	# define primary_key record		                                                                                             	#@G00675
	DEFINE l_pky RECORD #@g00676 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00677 
	END RECORD #@g00678 

	# display the selected columns		                                                                                          	#@G00680

	LET rec_service_request = "SELECT sr_seed ", #@g00682 
	" FROM service_request ", #@g00683 
	"WHERE ",qry_stmt clipped, #@g00684 
	" ORDER BY sr_seed " #@g00685 

	PREPARE rech_mservice_request FROM rec_service_request #@g00687 

	# crs_scrl_mservice_request : the first CURSOR selects all the primary keys (NOT all the table columns)		                 	#@G00689

	DECLARE crs_scrl_mservice_request SCROLL CURSOR with HOLD FOR rech_mservice_request #@g00691 

	WHENEVER ERROR CONTINUE #@g00693 
	OPEN crs_scrl_mservice_request #@g00694 
	WHENEVER ERROR CALL error_mngmt #@g00695 

	RETURN sqlca.sqlcode #@g00697 
END FUNCTION ## sql_opn_pky_scr_cursservice_request #@g00698 

#######################################################################		                                                  	#@G00700
# sql_nxtprev_service_request : FETCH NEXT OR PREVIOUS RECORD		                                                            	#@G00701
FUNCTION sql_nxtprev_service_request(offset) #@g00702 
	DEFINE offset SMALLINT #@g00703 
	DEFINE lsql_stmt_status,record_found INTEGER #@g00704 
	DEFINE pky RECORD #@g00705 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00706 
	END RECORD #@g00707 

	WHENEVER ERROR CONTINUE #@g00709 
	FETCH relative offset crs_scrl_mservice_request INTO pky.* #@g00710 
	WHENEVER ERROR CALL error_mngmt #@g00711 

	CASE #@g00713 
		WHEN sqlca.sqlcode = 100 #@g00714 
			LET record_found = 0 #@g00715 
		WHEN sqlca.sqlcode < 0 #@g00716 
			LET record_found = -1 #@g00717 
		OTHERWISE #@g00718 
			LET lsql_stmt_status = 1 #@g00719 
			CALL sql_fetch_full_row_service_request (pky.*) #@g00720 
			RETURNING record_found #@g00721 

	END CASE #@g00723 
	RETURN record_found,pky.* #@g00724 
END FUNCTION ## sql_nxtprev_service_request #@g00725 

########################################################################		                                                 	#@G00727
# sql_FETCH_full_row_service_request : read a complete row accessing by primary key		                                      	#@G00728
# inbound parameter : primary key		                                                                                        	#@G00729
# outbound parameter: sql_stmt_status AND row contents		                                                                   	#@G00730
FUNCTION sql_fetch_full_row_service_request(pky_service_request) #@g00731 
	DEFINE sql_stmt_status SMALLINT #@g00732 
	DEFINE pky_service_request RECORD #@g00733 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00734 
	END RECORD #@g00735 
	DEFINE lookup_status INTEGER #@g00736 
	#@G00736

	# read the table, access on primary key		                                                                                 	#@G00738
	WHENEVER ERROR CONTINUE #@g00739 
	OPEN crs_row_mservice_request #@g00740 
	USING pky_service_request.* #@g00741 

	FETCH crs_row_mservice_request INTO tbl_srvr_rqst.* #@g00743 

	WHENEVER ERROR CALL error_mngmt #@g00745 
	CASE #@g00746 
		WHEN sqlca.sqlcode = 100 #@g00747 
			LET sql_stmt_status = 0 #@g00748 
		WHEN sqlca.sqlcode < 0 #@g00749 
			LET sql_stmt_status = -1 #@g00750 
		OTHERWISE #@g00751 
			LET sql_stmt_status = 1 #@g00752 
			CALL set_form_record_srvr_rqst_f_service_request(tbl_srvr_rqst.*) #@g00753 
			RETURNING frm_srvr_rqst.* #@g00754 
			IF frm_srvr_rqst.os_code IS NOT NULL THEN #@g00754 
				CALL lookup_service_request_operating_systems(frm_srvr_rqst.os_code) #@g00755 
				RETURNING lookup_status, #@g00755 
				lup_srvr_rqst.os_name #@g00756 
			END IF #@g00757 
			IF frm_srvr_rqst.cmpy_code IS NOT NULL AND frm_srvr_rqst.prd_code IS NOT NULL THEN #@g00757 
				CALL lookup_service_request_supported_products(frm_srvr_rqst.cmpy_code,frm_srvr_rqst.prd_code) #@g00758 
				RETURNING lookup_status, #@g00758 
				lup_srvr_rqst.prd_name #@g00759 
			END IF #@g00760 
			#@G00760
	END CASE #@g00761 
	RETURN sql_stmt_status #@g00762 
END FUNCTION ## sql_fetch_full_row_service_request #@g00763 

########################################################################		                                                 	#@G00765
## INSERT in table service_request 		                                                                                      	#@G00766
########################################################################		                                                 	#@G00767
FUNCTION sql_insert_service_request() #@g00768 
	DEFINE lsql_stmt_status INTEGER #@g00769 
	DEFINE row_count SMALLINT #@g00770 
	DEFINE pky RECORD #@g00771 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00772 
	END RECORD #@g00773 
	WHENEVER ERROR CONTINUE #@g00774 
	EXECUTE pr_ins_mservice_request #@g00775 
	USING tbl_srvr_rqst.sr_seed, #@g00775 
	tbl_srvr_rqst.cmpy_code, #@g00775 
	tbl_srvr_rqst.sr_number, #@g00775 
	tbl_srvr_rqst.sr_parent, #@g00775 
	tbl_srvr_rqst.sr_duplicate, #@g00775 
	tbl_srvr_rqst.open_date, #@g00775 
	tbl_srvr_rqst.deadline, #@g00775 
	tbl_srvr_rqst.abstract, #@g00775 
	tbl_srvr_rqst.prd_code, #@g00775 
	tbl_srvr_rqst.prd_module, #@g00775 
	tbl_srvr_rqst.prd_version, #@g00775 
	tbl_srvr_rqst.os_code, #@g00775 
	tbl_srvr_rqst.os_version, #@g00775 
	tbl_srvr_rqst.cust_references, #@g00775 
	tbl_srvr_rqst.serial_number, #@g00775 
	tbl_srvr_rqst.sr_type, #@g00775 
	tbl_srvr_rqst.severity, #@g00775 
	tbl_srvr_rqst.environment, #@g00775 
	tbl_srvr_rqst.description, #@g00775 
	tbl_srvr_rqst.sr_status, #@g00775 
	tbl_srvr_rqst.reported_by, #@g00775 
	tbl_srvr_rqst.rb_channel, #@g00775 
	tbl_srvr_rqst.answer_to, #@g00775 
	tbl_srvr_rqst.at_channel, #@g00775 
	tbl_srvr_rqst.sr_owner, #@g00775 
	tbl_srvr_rqst.so_channel, #@g00775 
	tbl_srvr_rqst.close_date #@g00776 
	WHENEVER ERROR CALL error_mngmt #@g00777 

	IF sqlca.sqlcode < 0 THEN #@g00779 
		LET lsql_stmt_status = -1 #@g00780 
	ELSE #@g00781 
		LET lsql_stmt_status = 0 #@g00782 
		SELECT dbinfo('bigserial') INTO pky.sr_seed #@g00783 
		FROM systables WHERE tabid=1 #@g00784 
		#@G00785

	END IF #@g00787 
	RETURN lsql_stmt_status,pky.* #@g00788 
END FUNCTION ## sql_insert_service_request #@g00789 

########################################################################		                                                 	#@G00791
## sql_update_service_request :UPDATE service_request record		                                                             	#@G00792
FUNCTION sql_update_service_request(pky) #@g00793 
	DEFINE lsql_stmt_status INTEGER #@g00794 
	DEFINE pky RECORD #@g00795 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00796 
	END RECORD #@g00797 

	WHENEVER ERROR CONTINUE #@g00799 
	EXECUTE pr_upd_mservice_request #@g00800 
	USING tbl_srvr_rqst.cmpy_code, #@g00800 
	tbl_srvr_rqst.sr_number, #@g00800 
	tbl_srvr_rqst.sr_parent, #@g00800 
	tbl_srvr_rqst.sr_duplicate, #@g00800 
	tbl_srvr_rqst.open_date, #@g00800 
	tbl_srvr_rqst.deadline, #@g00800 
	tbl_srvr_rqst.abstract, #@g00800 
	tbl_srvr_rqst.prd_code, #@g00800 
	tbl_srvr_rqst.prd_module, #@g00800 
	tbl_srvr_rqst.prd_version, #@g00800 
	tbl_srvr_rqst.os_code, #@g00800 
	tbl_srvr_rqst.os_version, #@g00800 
	tbl_srvr_rqst.cust_references, #@g00800 
	tbl_srvr_rqst.serial_number, #@g00800 
	tbl_srvr_rqst.sr_type, #@g00800 
	tbl_srvr_rqst.severity, #@g00800 
	tbl_srvr_rqst.environment, #@g00800 
	tbl_srvr_rqst.description, #@g00800 
	tbl_srvr_rqst.sr_status, #@g00800 
	tbl_srvr_rqst.reported_by, #@g00800 
	tbl_srvr_rqst.rb_channel, #@g00800 
	tbl_srvr_rqst.answer_to, #@g00800 
	tbl_srvr_rqst.at_channel, #@g00800 
	tbl_srvr_rqst.sr_owner, #@g00800 
	tbl_srvr_rqst.so_channel, #@g00800 
	tbl_srvr_rqst.close_date , #@g00801 
	pky.* #@g00802 

	WHENEVER ERROR CALL error_mngmt #@g00804 
	IF sqlca.sqlcode < 0 THEN #@g00805 

		LET lsql_stmt_status = -1 #@g00807 
	ELSE #@g00808 
		LET lsql_stmt_status = 0 #@g00809 
	END IF #@g00810 
	RETURN lsql_stmt_status #@g00811 
END FUNCTION ## sql_update_service_request #@g00812 

########################################################################		                                                 	#@G00814
## sql_delete_service_request :delete current row in table service_request 		                                              	#@G00815
FUNCTION sql_delete_service_request(pky) #@g00816 
	DEFINE lsql_stmt_status SMALLINT #@g00817 
	DEFINE pky RECORD #@g00818 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00819 
	END RECORD #@g00820 

	WHENEVER ERROR CONTINUE #@g00822 
	EXECUTE pr_del_mservice_request #@g00823 
	USING pky.* #@g00824 

	WHENEVER ERROR CALL error_mngmt #@g00826 
	IF sqlca.sqlcode < 0 THEN #@g00827 
		LET lsql_stmt_status = -1 #@g00828 
	ELSE #@g00829 
		LET lsql_stmt_status=0 #@g00830 
	END IF #@g00831 
	RETURN lsql_stmt_status #@g00832 
END FUNCTION ## sql_delete_service_request #@g00833 

################################################################################		                                         	#@G00835
#   status_pk_service_request : Check if primary key exists		                                                              	#@G00836
# inbound parameter : record of primary key		                                                                              	#@G00837
# outbound parameter:  STATUS > 0  if exists, 0 if no record, < 0 if error		                                               	#@G00838
FUNCTION status_pk_service_request(pky) #@g00839 
	DEFINE pky RECORD #@g00840 
		sr_seed LIKE service_request.sr_seed # BIGSERIAL #@g00841 
	END RECORD #@g00842 
	DEFINE pk_status INTEGER #@g00843 

	WHENEVER ERROR CONTINUE #@g00845 
	OPEN crs_pky_mservice_request USING pky.* #@g00846 
	FETCH crs_pky_mservice_request #@g00847 
	WHENEVER ERROR CALL error_mngmt #@g00848 

	CASE sqlca.sqlcode #@g00850 
		WHEN 0 #@g00851 
			LET pk_status = 1 #@g00852 
		WHEN 100 #@g00853 
			LET pk_status = 0 #@g00854 
		WHEN sqlca.sqlerrd[2] = 104 #@g00855 
			LET pk_status = -1 # RECORD locked #@g00856 
		WHEN sqlca.sqlcode < 0 #@g00857 
			LET pk_status = sqlca.sqlcode #@g00858 
	END CASE #@g00859 

	RETURN pk_status #@g00861 
END FUNCTION ## status_pkservice_request #@g00862 

################################################################################################		                         	#@G00864
#   set_form_record_srvr_rqst_f_service_request: assigns table VALUES TO form fields VALUES		                              	#@G00865
FUNCTION set_form_record_srvr_rqst_f_service_request(tbl_contents) #@g00866 
	DEFINE frm_contents RECORD #@g00867 
		cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00867 
		sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00867 
		sr_number LIKE service_request.sr_number, # varchar(16) #@g00867 
		sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00867 
		sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00867 
		sr_status LIKE service_request.sr_status, # CHAR(12) #@g00867 
		open_date LIKE service_request.open_date, # DATETIME #@g00867 
		deadline LIKE service_request.deadline, # DATETIME #@g00867 
		close_date LIKE service_request.close_date, # DATETIME #@g00867 
		abstract LIKE service_request.abstract, # CHAR(80) #@g00867 
		sr_type LIKE service_request.sr_type, # CHAR(8) #@g00867 
		severity LIKE service_request.severity, # SMALLINT #@g00867 
		environment LIKE service_request.environment, # CHAR(20) #@g00867 
		prd_code LIKE service_request.prd_code, # CHAR(13) #@g00867 
		prd_module LIKE service_request.prd_module, # CHAR(15) #@g00867 
		prd_version LIKE service_request.prd_version, # CHAR(20) #@g00867 
		os_code LIKE service_request.os_code, # CHAR(10) #@g00867 
		os_version LIKE service_request.os_version, # CHAR(20) #@g00867 
		cust_references LIKE service_request.cust_references, # varchar(5184) #@g00867 
		serial_number LIKE service_request.serial_number, # CHAR(20) #@g00867 
		rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00867 
		reported_by LIKE service_request.reported_by, # varchar(64) #@g00867 
		at_channel LIKE service_request.at_channel, # CHAR(6) #@g00867 
		answer_to LIKE service_request.answer_to, # varchar(64) #@g00867 
		so_channel LIKE service_request.so_channel, # CHAR(6) #@g00867 
		sr_owner LIKE service_request.sr_owner # varchar(64) #@g00868 
	END RECORD #@g00869 

	DEFINE tbl_contents RECORD #@g00871 
		sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00871 
		cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00871 
		sr_number LIKE service_request.sr_number, # varchar(16) #@g00871 
		sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00871 
		sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00871 
		open_date LIKE service_request.open_date, # DATETIME #@g00871 
		deadline LIKE service_request.deadline, # DATETIME #@g00871 
		abstract LIKE service_request.abstract, # CHAR(80) #@g00871 
		prd_code LIKE service_request.prd_code, # CHAR(13) #@g00871 
		prd_module LIKE service_request.prd_module, # CHAR(15) #@g00871 
		prd_version LIKE service_request.prd_version, # CHAR(20) #@g00871 
		os_code LIKE service_request.os_code, # CHAR(10) #@g00871 
		os_version LIKE service_request.os_version, # CHAR(20) #@g00871 
		cust_references LIKE service_request.cust_references, # varchar(5184) #@g00871 
		serial_number LIKE service_request.serial_number, # CHAR(20) #@g00871 
		sr_type LIKE service_request.sr_type, # CHAR(8) #@g00871 
		severity LIKE service_request.severity, # SMALLINT #@g00871 
		environment LIKE service_request.environment, # CHAR(20) #@g00871 
		description LIKE service_request.description, # lvarchar(32000) #@g00871 
		sr_status LIKE service_request.sr_status, # CHAR(12) #@g00871 
		reported_by LIKE service_request.reported_by, # varchar(64) #@g00871 
		rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00871 
		answer_to LIKE service_request.answer_to, # varchar(64) #@g00871 
		at_channel LIKE service_request.at_channel, # CHAR(6) #@g00871 
		sr_owner LIKE service_request.sr_owner, # varchar(64) #@g00871 
		so_channel LIKE service_request.so_channel, # CHAR(6) #@g00871 
		close_date LIKE service_request.close_date # DATETIME #@g00872 
	END RECORD #@g00873 

	INITIALIZE frm_contents.* TO NULL #@g00875 
	LET frm_contents.cmpy_code = tbl_srvr_rqst.cmpy_code #@g00876 
	LET frm_contents.sr_seed = tbl_srvr_rqst.sr_seed #@g00877 
	LET frm_contents.sr_number = tbl_srvr_rqst.sr_number #@g00878 
	LET frm_contents.sr_parent = tbl_srvr_rqst.sr_parent #@g00879 
	LET frm_contents.sr_duplicate = tbl_srvr_rqst.sr_duplicate #@g00880 
	LET frm_contents.sr_status = tbl_srvr_rqst.sr_status #@g00881 
	LET frm_contents.open_date = tbl_srvr_rqst.open_date #@g00882 
	LET frm_contents.deadline = tbl_srvr_rqst.deadline #@g00883 
	LET frm_contents.close_date = tbl_srvr_rqst.close_date #@g00884 
	LET frm_contents.abstract = tbl_srvr_rqst.abstract #@g00885 
	LET frm_contents.sr_type = tbl_srvr_rqst.sr_type #@g00886 
	LET frm_contents.severity = tbl_srvr_rqst.severity #@g00887 
	LET frm_contents.environment = tbl_srvr_rqst.environment #@g00888 
	LET frm_contents.prd_code = tbl_srvr_rqst.prd_code #@g00889 
	LET frm_contents.prd_module = tbl_srvr_rqst.prd_module #@g00890 
	LET frm_contents.prd_version = tbl_srvr_rqst.prd_version #@g00891 
	LET frm_contents.os_code = tbl_srvr_rqst.os_code #@g00892 
	LET frm_contents.os_version = tbl_srvr_rqst.os_version #@g00893 
	LET frm_contents.cust_references = tbl_srvr_rqst.cust_references #@g00894 
	LET frm_contents.serial_number = tbl_srvr_rqst.serial_number #@g00895 
	LET frm_contents.rb_channel = tbl_srvr_rqst.rb_channel #@g00896 
	LET frm_contents.reported_by = tbl_srvr_rqst.reported_by #@g00897 
	LET frm_contents.at_channel = tbl_srvr_rqst.at_channel #@g00898 
	LET frm_contents.answer_to = tbl_srvr_rqst.answer_to #@g00899 
	LET frm_contents.so_channel = tbl_srvr_rqst.so_channel #@g00900 
	LET frm_contents.sr_owner = tbl_srvr_rqst.sr_owner #@g00901 
	#@G00902
	RETURN frm_contents.* #@g00903 
END FUNCTION ## set_form_record_srvr_rqst_f_service_request #@g00904 

################################################################################################		                         	#@G00906
## set_table_record_srvr_rqst_service_request: assigns form fields value TO table VALUES		                                 	#@G00907
FUNCTION set_table_record_srvr_rqst_service_request(sql_stmt,frm_contents) #@g00908 
	DEFINE sql_stmt SMALLINT # 1 => insert, 2 => UPDATE #@g00909 
	DEFINE frm_contents RECORD #@g00910 
		cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00910 
		sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00910 
		sr_number LIKE service_request.sr_number, # varchar(16) #@g00910 
		sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00910 
		sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00910 
		sr_status LIKE service_request.sr_status, # CHAR(12) #@g00910 
		open_date LIKE service_request.open_date, # DATETIME #@g00910 
		deadline LIKE service_request.deadline, # DATETIME #@g00910 
		close_date LIKE service_request.close_date, # DATETIME #@g00910 
		abstract LIKE service_request.abstract, # CHAR(80) #@g00910 
		sr_type LIKE service_request.sr_type, # CHAR(8) #@g00910 
		severity LIKE service_request.severity, # SMALLINT #@g00910 
		environment LIKE service_request.environment, # CHAR(20) #@g00910 
		prd_code LIKE service_request.prd_code, # CHAR(13) #@g00910 
		prd_module LIKE service_request.prd_module, # CHAR(15) #@g00910 
		prd_version LIKE service_request.prd_version, # CHAR(20) #@g00910 
		os_code LIKE service_request.os_code, # CHAR(10) #@g00910 
		os_version LIKE service_request.os_version, # CHAR(20) #@g00910 
		cust_references LIKE service_request.cust_references, # varchar(5184) #@g00910 
		serial_number LIKE service_request.serial_number, # CHAR(20) #@g00910 
		rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00910 
		reported_by LIKE service_request.reported_by, # varchar(64) #@g00910 
		at_channel LIKE service_request.at_channel, # CHAR(6) #@g00910 
		answer_to LIKE service_request.answer_to, # varchar(64) #@g00910 
		so_channel LIKE service_request.so_channel, # CHAR(6) #@g00910 
		sr_owner LIKE service_request.sr_owner # varchar(64) #@g00911 
	END RECORD #@g00912 

	DEFINE tbl_contents RECORD #@g00914 
		sr_seed LIKE service_request.sr_seed, # BIGSERIAL #@g00914 
		cmpy_code LIKE service_request.cmpy_code, # CHAR(2) #@g00914 
		sr_number LIKE service_request.sr_number, # varchar(16) #@g00914 
		sr_parent LIKE service_request.sr_parent, # varchar(16) #@g00914 
		sr_duplicate LIKE service_request.sr_duplicate, # varchar(16) #@g00914 
		open_date LIKE service_request.open_date, # DATETIME #@g00914 
		deadline LIKE service_request.deadline, # DATETIME #@g00914 
		abstract LIKE service_request.abstract, # CHAR(80) #@g00914 
		prd_code LIKE service_request.prd_code, # CHAR(13) #@g00914 
		prd_module LIKE service_request.prd_module, # CHAR(15) #@g00914 
		prd_version LIKE service_request.prd_version, # CHAR(20) #@g00914 
		os_code LIKE service_request.os_code, # CHAR(10) #@g00914 
		os_version LIKE service_request.os_version, # CHAR(20) #@g00914 
		cust_references LIKE service_request.cust_references, # varchar(5184) #@g00914 
		serial_number LIKE service_request.serial_number, # CHAR(20) #@g00914 
		sr_type LIKE service_request.sr_type, # CHAR(8) #@g00914 
		severity LIKE service_request.severity, # SMALLINT #@g00914 
		environment LIKE service_request.environment, # CHAR(20) #@g00914 
		description LIKE service_request.description, # lvarchar(32000) #@g00914 
		sr_status LIKE service_request.sr_status, # CHAR(12) #@g00914 
		reported_by LIKE service_request.reported_by, # varchar(64) #@g00914 
		rb_channel LIKE service_request.rb_channel, # CHAR(6) #@g00914 
		answer_to LIKE service_request.answer_to, # varchar(64) #@g00914 
		at_channel LIKE service_request.at_channel, # CHAR(6) #@g00914 
		sr_owner LIKE service_request.sr_owner, # varchar(64) #@g00914 
		so_channel LIKE service_request.so_channel, # CHAR(6) #@g00914 
		close_date LIKE service_request.close_date # DATETIME #@g00915 
	END RECORD #@g00916 

	INITIALIZE tbl_contents.* TO NULL #@g00918 
	IF sql_stmt = 1 THEN #@g00919 
		LET tbl_contents.sr_seed = 0 #@g00920 
	END IF #@g00921 
	LET tbl_contents.cmpy_code = frm_srvr_rqst.cmpy_code #@g00922 
	LET tbl_contents.sr_number = frm_srvr_rqst.sr_number #@g00923 
	LET tbl_contents.sr_parent = frm_srvr_rqst.sr_parent #@g00924 
	LET tbl_contents.sr_duplicate = frm_srvr_rqst.sr_duplicate #@g00925 
	LET tbl_contents.open_date = frm_srvr_rqst.open_date #@g00926 
	LET tbl_contents.deadline = frm_srvr_rqst.deadline #@g00927 
	LET tbl_contents.abstract = frm_srvr_rqst.abstract #@g00928 
	LET tbl_contents.prd_code = frm_srvr_rqst.prd_code #@g00929 
	LET tbl_contents.prd_module = frm_srvr_rqst.prd_module #@g00930 
	LET tbl_contents.prd_version = frm_srvr_rqst.prd_version #@g00931 
	LET tbl_contents.os_code = frm_srvr_rqst.os_code #@g00932 
	LET tbl_contents.os_version = frm_srvr_rqst.os_version #@g00933 
	LET tbl_contents.cust_references = frm_srvr_rqst.cust_references #@g00934 
	LET tbl_contents.serial_number = frm_srvr_rqst.serial_number #@g00935 
	LET tbl_contents.sr_type = frm_srvr_rqst.sr_type #@g00936 
	LET tbl_contents.severity = frm_srvr_rqst.severity #@g00937 
	LET tbl_contents.environment = frm_srvr_rqst.environment #@g00938 
	# LET tbl_contents.description = your value		                                                                              	#@G00939
	LET tbl_contents.sr_status = frm_srvr_rqst.sr_status #@g00940 
	LET tbl_contents.reported_by = frm_srvr_rqst.reported_by #@g00941 
	LET tbl_contents.rb_channel = frm_srvr_rqst.rb_channel #@g00942 
	LET tbl_contents.answer_to = frm_srvr_rqst.answer_to #@g00943 
	LET tbl_contents.at_channel = frm_srvr_rqst.at_channel #@g00944 
	LET tbl_contents.sr_owner = frm_srvr_rqst.sr_owner #@g00945 
	LET tbl_contents.so_channel = frm_srvr_rqst.so_channel #@g00946 
	LET tbl_contents.close_date = frm_srvr_rqst.close_date #@g00947 
	#@G00948

	RETURN tbl_contents.* #@g00950 
END FUNCTION ## set_table_record_srvr_rqst_service_request #@g00951 

FUNCTION lookup_service_request_supported_products(l_cmpy_code,l_prd_code) #@g00953 
	DEFINE l_cmpy_code LIKE supported_products.cmpy_code
	DEFINE l_prd_code CHAR(13) #@g00955 
	DEFINE l_prd_name CHAR(40) #@g00956 
	WHENEVER ERROR CONTINUE #@g00957 
	SELECT prd_name #@g00957 
	INTO l_prd_name #@g00958 
	FROM supported_products #@g00959 
	WHERE cmpy_code = l_cmpy_code #@g00960 
	AND prd_code = l_prd_code #@g00961 
	IF sqlca.sqlcode = 100 THEN #@g00962 
		LET l_prd_name = NULL #@g00963 
	END IF #@g00964 
	WHENEVER ERROR CALL error_mngmt #@g00965 
	RETURN sqlca.sqlcode,l_prd_name #@g00966 
END FUNCTION #@g00967 

FUNCTION lookup_service_request_operating_systems(l_os_code) #@g00969 
	DEFINE l_os_code CHAR(10) #@g00970 
	DEFINE l_os_name CHAR(30) #@g00971 
	WHENEVER ERROR CONTINUE #@g00972 
	SELECT os_name #@g00972 
	INTO l_os_name #@g00973 
	FROM operating_systems #@g00974 
	WHERE os_code = l_os_code #@g00975 
	IF sqlca.sqlcode = 100 THEN #@g00976 
		LET l_os_name = NULL #@g00977 
	END IF #@g00978 
	WHENEVER ERROR CALL error_mngmt #@g00979 
	RETURN sqlca.sqlcode,l_os_name #@g00980 
END FUNCTION #@g00981 

#@G00983

#@G00985

#@G00987

