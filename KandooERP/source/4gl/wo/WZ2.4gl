# module generated by kandooERP Ffg(c) 
# Generated on 2019-08-24 10:38:10
# Main template I:\Users\BeGooden-IT\git\KandooERP\KandooERP\Resources\Utilities\Perl\Ffg/templates/module/standalone-form-kandoo.mtplt

############################################################
# GLOBAL Scope Variables
############################################################ 
GLOBALS "../common/glob_GLOBALS.4gl"
GLOBALS
	DEFINE global_cmpy_code LIKE company.cmpy_code
	DEFINE whom CHAR(32)
END GLOBALS

############################################################
# MODULE Scope Variables
############################################################
DEFINE m_program CHAR(30)
DEFINE lku_company
	RECORD
		name_text LIKE company.name_text #  nvarchar(40)
	END RECORD
DEFINE g_cartarea RECORD LIKE cartarea.*													 


############################################################
# MAIN
#
# WHENEVER ERROR CALL error_mngmt
############################################################
MAIN
	DEFER INTERRUPT
			                                                                                                                         	#@G00020
	
	LET m_program="p_WZ2_cartarea"

	CALL main_WZ2_cartarea()

END MAIN


############################################################
# FUNCTION mc_WZ2_sccs()
#
# definition variable sccs
############################################################
FUNCTION mc_WZ2_sccs()
	DEFINE sccs_var CHAR(70)
	
	LET sccs_var="%W% %D%"
END FUNCTION


############################################################
# FUNCTION main_WZ2_cartarea ()
#
# this module's main function called by MAIN
############################################################
FUNCTION main_WZ2_cartarea ()

	DEFER QUIT
	DEFER INTERRUPT


	CALL setModuleId("WZ2") #hard coded unique program identifier
	CALL ui_init(0)	#Initial UI Init
	DEFER QUIT
	DEFER INTERRUPT
	CALL authenticate(getModuleId()) RETURNING global_cmpy_code, whom

	

	OPEN WINDOW W_W117 WITH FORM "W117"
	CALL winDecoration_w("W117")
	CALL displaymoduletitle(NULL)  --first form of the module get's the title



	CALL sql_prepare_queries_WZ2_cartarea () # initialize all cursors on master table


	CALL menu_WZ2_cartarea()      


	CLOSE WINDOW W_W117


END FUNCTION


############################################################
# FUNCTION menu_WZ2_cartarea ()
#
# menu_WZ2_cartarea
# the top level menu 
# input arguments: none
# output arguments: none
###########################################################
FUNCTION menu_WZ2_cartarea ()

	DEFINE nbsel_cartarea INTEGER
	DEFINE sql_stmt_status INTEGER
	DEFINE record_num INTEGER
	DEFINE action smallint
	DEFINE xnumber smallint
	DEFINE arr_elem_num smallint
	DEFINE pky_cartarea RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00069
	END RECORD
	DEFINE frm_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00072
	END RECORD


	DEFINE tbl_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00076
	END RECORD


	DEFINE record_found INTEGER
	DEFINE lookup_status INTEGER


	LET nbsel_cartarea = 0
	MENU "cartarea"
	BEFORE MENU
		HIDE OPTION "Next","Previous","EDIT","DELETE"
		
		ON ACTION "WEB-HELP"
			CALL onlineHelp(getModuleId(),NULL)
			
		ON ACTION "actToolbarManager"
		 	CALL setupToolbar()		
		
	COMMAND "Query" "Query data with multiple criteria cartarea"
				                                                                                                                         	#@G00086
		MESSAGE ""
		INITIALIZE frm_WZ2.* TO NULL
		CLEAR FORM
		DISPLAY BY NAME frm_WZ2.*
		HIDE OPTION "Next","Previous"


		CALL frm_Query_WZ2() RETURNING nbsel_cartarea
		IF nbsel_cartarea > 0 THEN 
			CALL sql_nxtprev_cartarea(1) RETURNING record_found,
			pky_cartarea.*


			CASE
			WHEN record_found = 1
				LET record_num = 1
				CALL sql_FETCH_full_row_cartarea (pky_cartarea.*)
				RETURNING record_found,frm_WZ2.*
				CALL frm_Display_WZ2(frm_WZ2.*)
			WHEN record_found = -1 
				ERROR "This row is unreachable ",sqlca.sqlcode
			END CASE
			IF nbsel_cartarea > 1 THEN
			   SHOW OPTION "Next"
			   NEXT OPTION "Next"
			END IF
			SHOW OPTION "EDIT","DELETE"


		ELSE 
			ERROR "No row matches the criteria"
			NEXT OPTION "Query"
		END IF


	COMMAND "Next" "Display Next record cartarea"
				                                                                                                                         	#@G00118
		MESSAGE ""
		CLEAR FORM
		INITIALIZE frm_WZ2.* TO NULL


		IF record_num <= nbsel_cartarea THEN
			CALL sql_nxtprev_cartarea(1) RETURNING record_found,
			pky_cartarea.*


			CASE 
			WHEN record_found = 0 
				ERROR "FETCH Last record of this selection cartarea"
			WHEN record_found = -1 
				ERROR "This row is unreachable ",sqlca.sqlcode
			WHEN record_found = 1
				LET record_num = record_num + 1
				CALL sql_FETCH_full_row_cartarea (pky_cartarea.*)
				RETURNING record_found,frm_WZ2.*


				CALL frm_Display_WZ2(frm_WZ2.*)


				IF record_num >= nbsel_cartarea THEN
				   HIDE OPTION "Next"
				END IF
                IF record_num > 1 THEN
                	SHOW OPTION "Previous"
                ELSE
                	HIDE OPTION "Previous"
				END IF


			END CASE
		ELSE
			ERROR " Please set query criteria previously cartarea "
			NEXT OPTION "Query" 
		END IF


	COMMAND "Previous" "Display Previous Record cartarea"
				                                                                                                                         	#@G00154


		MESSAGE ""
		CLEAR FORM
		INITIALIZE frm_WZ2.* TO NULL


		IF record_num >= 1 THEN
			CALL sql_nxtprev_cartarea(-1) RETURNING record_found,
			pky_cartarea.*


			CASE 
			WHEN record_found = 0
				ERROR "FETCH First record of this selection cartarea"
			WHEN record_found < -1
				ERROR "This row is unreachable ",sqlca.sqlcode
			WHEN record_found = 1
				LET record_num = record_num - 1
				CALL sql_FETCH_full_row_cartarea (pky_cartarea.*)
				RETURNING record_found,frm_WZ2.*
				CALL frm_Display_WZ2(frm_WZ2.*)
				IF record_num = 1 THEN
				   HIDE OPTION "Previous"
				END IF
				IF record_num < nbsel_cartarea THEN
					SHOW OPTION "Next"
				ELSE
					HIDE OPTION "Next"
				END IF


			END CASE
		ELSE
			ERROR " Please set query criteria previously cartarea "
			NEXT OPTION "Query"
		END IF


	COMMAND "Insert" "Add a new record cartarea"
				                                                                                                                         	#@G00189
		MESSAGE ""
		CALL frm_Insert_WZ2() RETURNING sql_stmt_status,pky_cartarea.*
		MESSAGE ""


	COMMAND "EDIT" "Modify current record cartarea"
		IF nbsel_cartarea THEN
			IF sql_status_pk_cartarea(pky_cartarea.*) < 0 THEN
				ERROR "is locked "
				NEXT OPTION "Next"
			ELSE
				CALL frm_Edit_WZ2(pky_cartarea.*,frm_WZ2.*)
				RETURNING sql_stmt_status
			END IF
		ELSE
			ERROR " Please set query criteria previously cartarea "
			NEXT OPTION "Query"
		END IF


   COMMAND "DELETE" "Suppress current record cartarea"
				                                                                                                                         	#@G00209
		MESSAGE ""
		IF nbsel_cartarea THEN
			IF sql_status_pk_cartarea(pky_cartarea.*) < 0 THEN
				ERROR "is locked "
				NEXT OPTION "Next"
			END IF
			WHILE TRUE
				CALL confirm_operation(5,10,"Delete") RETURNING action
				CASE 
				WHEN action = 0 OR action = 1 
					EXIT WHILE # degage abandon
				WHEN action = 2 
					CALL frm_Delete_WZ2(pky_cartarea.*)
					RETURNING sql_stmt_status
					EXIT WHILE
				END CASE
			END WHILE
		ELSE
			ERROR "Please set query criteria previously cartarea "
			NEXT OPTION "Query"
		END IF


	COMMAND "Exit" "Exit program"
				                                                                                                                         	#@G00232
		MESSAGE ""
		EXIT MENU
	END MENU
END FUNCTION



############################################################
# FUNCTION frm_Query_WZ2()
#
# frm_Query_WZ2_WZ2 : Query By Example on table cartarea
# Input selection criteria,
# prepare the query,
# OPEN the data set
###########################################################
FUNCTION frm_Query_WZ2()
	DEFINE rec_cartarea STRING
	DEFINE where_clause STRING
	DEFINE xnumber INTEGER
	DEFINE sql_stmt_status INTEGER
	DEFINE l_pky
		RECORD 
			cart_area_code LIKE cartarea.cart_area_code # nchar(3)
		END RECORD
	DEFINE frm_WZ2
		RECORD 
			cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
			cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
			desc_text LIKE cartarea.desc_text #  nvarchar(40)
		END RECORD

	DEFINE reply CHAR(5)
	LET xnumber = 0

	MESSAGE "Please input query criteria"
	# initialize record and display blank
	CLEAR FORM
	INITIALIZE frm_WZ2.* TO NULL
	DISPLAY BY NAME frm_WZ2.*


	CONSTRUCT BY NAME where_clause ON cartarea.cmpy_code,
	cartarea.cart_area_code,
	cartarea.desc_text
	
			                                                                                                                         	#@G00261
				                                                                                                                         	#@G00262
	## Check whether criteria have been entered
	AFTER CONSTRUCT 
		IF NOT field_touched(cartarea.*) AND NOT int_flag THEN
			LET reply = fgl_winbutton("","Select all rows, are you sure?","Yes","Yes|No","question",0)
			CASE 
			WHEN reply MATCHES "Yes"
				EXIT CONSTRUCT 
			OTHERWISE # Saisie d'un critere de selection
				ERROR "Please input a least one criteria"
				CONTINUE CONSTRUCT
			END CASE
		END IF
	END CONSTRUCT


	IF int_flag = TRUE THEN
		MESSAGE "Quit with quit key"
		LET int_flag=0
	ELSE
		LET xnumber = sql_get_qbe_count_cartarea(where_clause)
		IF xnumber > 0 THEN
			LET sql_stmt_status = sql_opn_pky_scr_curs_cartarea(where_clause)
		ELSE
			RETURN -1
		END IF
			

	END IF
	RETURN xnumber
END FUNCTION ## Query_cartarea


############################################################
# FUNCTION frm_Display_WZ2(frm_WZ2)
#
# frm_Display_WZ2_WZ2 : displays the form record AFTER reading and displays lookup records if any
# inbound: Form record.*
###########################################################
FUNCTION frm_Display_WZ2(frm_WZ2)
	DEFINE frm_WZ2
		RECORD 
			cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
			cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
			desc_text LIKE cartarea.desc_text #  nvarchar(40)
		END RECORD
	DEFINE lookup_status INTEGER
	DEFINE lku_company 
		RECORD
			name_text LIKE company.name_text #  nvarchar(40)
		END RECORD
			                                                                                                                         	#@G00302
	CLEAR FORM
	DISPLAY BY NAME frm_WZ2.*
	
DISPLAY lku_company.name_text TO name_text

END FUNCTION # frm_Display_WZ2_WZ2




############################################################
# FUNCTION frm_Insert_WZ2()
#
# frm_Insert_WZ2_WZ2: add a new cartarea row
###########################################################
FUNCTION frm_Insert_WZ2()
	DEFINE sql_stmt_status SMALLINT
	DEFINE rows_count SMALLINT
	DEFINE nbre_cartarea ,action SMALLINT
	DEFINE frm_WZ2
		RECORD 
			cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
			cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
			desc_text LIKE cartarea.desc_text #  nvarchar(40)
		END RECORD
	DEFINE tbl_WZ2
		RECORD 
			cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
			cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
			desc_text LIKE cartarea.desc_text # nvarchar(40)
		END RECORD
	DEFINE lookup_status INTEGER
	DEFINE lku_company
		RECORD
			name_text LIKE company.name_text #  nvarchar(40)
		END RECORD

	CLEAR FORM
	INITIALIZE frm_WZ2.* TO NULL


	WHILE true
		LET int_flag = false
		INPUT BY NAME frm_WZ2.cmpy_code,
		frm_WZ2.cart_area_code,
		frm_WZ2.desc_text
		
				                                                                                                                         	#@G00333
		WITHOUT DEFAULTS
				                                                                                                                         	#@G00334
				                                                                                                                         	#@G00334
				                                                                                                                         	#@G00334
		END INPUT
		IF int_flag = TRUE THEN
			# Resign from input
			LET int_flag=false
			DISPLAY BY NAME frm_WZ2.*
			MESSAGE "Quit with quit key Control-C"
			EXIT WHILE
		END IF 


		CALL confirm_operation(3,10,"Insert") RETURNING action
		CASE action
		WHEN 0 # I want to edit the input, remains displayed 'as is'
			CONTINUE WHILE # On laisse tout affiche comme tel


		WHEN 2 # On valide la transaction
			BEGIN WORK
					                                                                                                                         	#@G00350
			CALL set_table_record_WZ2_cartarea(1,frm_WZ2.*)
			RETURNING tbl_WZ2.*
			CALL sql_Insert_cartarea(tbl_WZ2.*) 
			returning sql_stmt_status,			tbl_WZ2.cart_area_code
					                                                                                                                         	#@G00354


			CASE 
			WHEN sql_stmt_status = 0
				MESSAGE "Insert cartarea Successful operation"
				COMMIT WORK
						                                                                                                                         	#@G00359
			WHEN sql_stmt_status < 0
				CALL display_eric_error("Insert cartarea:failed ")
				ROLLBACK WORK
						                                                                                                                         	#@G00362
			END CASE
			EXIT WHILE


		WHEN 0
			ROLLBACK WORK
					                                                                                                                         	#@G00367
			EXIT WHILE
		END CASE
	END WHILE
	# tbl_WZ2
	RETURN sql_stmt_status,	tbl_WZ2.cart_area_code
			                                                                                                                         	#@G00372
END FUNCTION ## frm_Insert_WZ2_WZ2


#######################################################################
# frm_Edit_WZ2_WZ2 : Edit a cartarea RECORD
# inbound: table primary key
FUNCTION frm_Edit_WZ2(pky,frm_WZ2)
	DEFINE action SMALLINT 
	DEFINE sql_stmt_status,dummy SMALLINT


	DEFINE tbl_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00383
	END RECORD


	DEFINE frm_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00387
	END RECORD


	DEFINE sav_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00391
	END RECORD
	DEFINE lookup_status INTEGER
			                                                                                                                         	#@G00393
	DEFINE rows_count SMALLINT
	DEFINE pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00396
	END RECORD


	## check if record can be accessed
	WHILE true
		LET int_flag = false
		# Save Screen Record values before altering
		LET sav_WZ2.* = frm_WZ2.* 
		BEGIN WORK
		EXECUTE IMMEDIATE "SET ISOLATION TO COMMITTED READ RETAIN UPDATE LOCKS"
		WHENEVER ERROR CONTINUE
		OPEN crs_upd_cartarea USING pky.*
		FETCH crs_upd_cartarea INTO dummy
		IF sqlca.sqlcode = -244 THEN ERROR "THIS ROW IS BEING MODIFIED"
			ROLLBACK WORK EXIT WHILE END IF
		WHENEVER ERROR STOP
				                                                                                                                         	#@G00411


		INPUT BY NAME frm_WZ2.cmpy_code,
		frm_WZ2.cart_area_code,
		frm_WZ2.desc_text
		
				                                                                                                                         	#@G00413
		WITHOUT DEFAULTS
				                                                                                                                         	#@G00414


				                                                                                                                         	#@G00415


				                                                                                                                         	#@G00416
		END INPUT
		IF int_flag = TRUE THEN
			LET int_flag=false
			# Restore previous value
			LET frm_WZ2.* = sav_WZ2.*
			DISPLAY BY NAME frm_WZ2.*
			DISPLAY BY NAME 
lku_company.name_text

					                                                                                                                         	#@G00422
			EXECUTE IMMEDIATE "SET ISOLATION TO COMMITTED READ"
			ROLLBACK WORK
			MESSAGE "$CancelCom Control-C"
			EXIT WHILE
		END IF 


		CALL confirm_operation(4,10,MODE_CLASSIC_EDIT) RETURNING action


		CASE 
		WHEN action = 0
			# Redo, leave values as modified
			CONTINUE WHILE
		WHEN action = 1 
			# Resign, restore original values
			LET frm_WZ2.* = sav_WZ2.*
			DISPLAY BY NAME frm_WZ2.*
			EXECUTE IMMEDIATE "SET ISOLATION TO COMMITTED READ"
			ROLLBACK WORK
			EXIT WHILE # Cancel operation


		WHEN action = 2 
			# confirm update
			CALL set_table_record_WZ2_cartarea(2,frm_WZ2.*)
			RETURNING tbl_WZ2.*


			# Perform the prepared update statement
			LET sql_stmt_status = sql_Edit_cartarea(pky.*,tbl_WZ2.*) 
			CASE 
			WHEN sql_stmt_status = 0
				MESSAGE "Edit cartarea Successful operation"
				EXECUTE IMMEDIATE "SET ISOLATION TO COMMITTED READ"
				COMMIT WORK
						                                                                                                                         	#@G00454
			WHEN sql_stmt_status < 0
				CALL display_eric_error("Edit cartarea:failed ")
				EXECUTE IMMEDIATE "SET ISOLATION TO COMMITTED READ"
				ROLLBACK WORK
						                                                                                                                         	#@G00458
			END CASE
			EXIT WHILE
		END CASE
	END WHILE
	RETURN sql_stmt_status
END FUNCTION ## frm_Edit_WZ2(pky)


#######################################################################
# DELETE A cartarea row
# inbound: table primary key
FUNCTION frm_Delete_WZ2(pky)
	DEFINE action SMALLINT
	DEFINE dummy SMALLINT
	DEFINE sql_stmt_status SMALLINT
	DEFINE pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00474
	END RECORD


	WHILE TRUE
		CALL confirm_operation(5,10,"Delete") RETURNING action
		BEGIN WORK
		EXECUTE IMMEDIATE "SET ISOLATION TO COMMITTED READ RETAIN UPDATE LOCKS"
		WHENEVER ERROR CONTINUE
		OPEN crs_upd_cartarea USING pky.*
		FETCH crs_upd_cartarea INTO dummy
		IF sqlca.sqlcode = -244 THEN ERROR "THIS ROW IS BEING MODIFIED"
			ROLLBACK WORK EXIT WHILE END IF
		WHENEVER ERROR STOP
				                                                                                                                         	#@G00486
		CASE 
		WHEN action = 0 OR action = 1 
			# can the delete operation
			EXIT WHILE 
		WHEN action = 2
			# Validate the delete operation
			CALL sql_Delete_cartarea(pky.*) RETURNING sql_stmt_status
			CASE 
			WHEN sql_stmt_status = 0
				MESSAGE "Delete cartarea Successful operation"
				COMMIT WORK
						                                                                                                                         	#@G00497


			WHEN sql_stmt_status < 0
				CALL display_eric_error("Delete cartarea:failed ")
				ROLLBACK WORK
						                                                                                                                         	#@G00501
			END CASE
			EXIT WHILE
		END CASE
	END WHILE
	RETURN sql_stmt_status
END FUNCTION ## frm_Delete_WZ2(pky)


#########################################################################
#  Build, prepare, declare and initialize main queries and cursors
FUNCTION sql_prepare_queries_WZ2_cartarea ()
	DEFINE query_text STRING


	# PREPARE cursor for full master table row contents, access by primary key
	LET query_text=
	"SELECT 	cmpy_code,cart_area_code,desc_text
	",		                                                                                                                       	#@G00516
	" FROM cartarea ",
	"WHERE  cart_area_code = ?	"		                                                                                                                        	#@G00518


	PREPARE sel_mrw_cartarea FROM query_text
	DECLARE crs_row_cartarea CURSOR FOR sel_mrw_cartarea


	# PREPARE cursor for row test / check if locked
	let query_text= "SELECT 	cart_area_code
	",		                                                                                                                       	#@G00524
	" FROM cartarea ",
	" WHERE  cart_area_code = ?	"		                                                                                                                        	#@G00526


	PREPARE sel_pky_cartarea FROM query_text
	DECLARE crs_pky_cartarea CURSOR FOR sel_pky_cartarea
	

	# PREPARE cursor for SELECT FOR UPDATE
	let query_text= "SELECT 	cart_area_code
	",		                                                                                                                       	#@G00532
	" FROM cartarea ",
	" WHERE  cart_area_code = ?	",		                                                                                                                       	#@G00534
	" FOR UPDATE"


	PREPARE sel_upd_cartarea FROM query_text
	DECLARE crs_upd_cartarea CURSOR FOR sel_upd_cartarea


	# PREPARE INSERT statement
	LET query_text =
	"INSERT INTO cartarea (	cmpy_code,cart_area_code,desc_text
	)",		                                                                                                                      	#@G00542
	" VALUES ( 	?,?,?
	)" 		                                                                                                                      	#@G00543
	PREPARE pr_ins_cartarea FROM query_text


	# PREPARE UPDATE statement
	let query_text=
	"UPDATE cartarea ",
	"SET ( 	cmpy_code,desc_text
	)",		                                                                                                                      	#@G00549
	" = ( 	?,?
	)",		                                                                                                                      	#@G00550
	" WHERE  cart_area_code = ?	" 		                                                                                                                       	#@G00551
	PREPARE pr_upd_cartarea FROM query_text


	# PREPARE DELETE statement
	let query_text= "DELETE FROM cartarea ",
	" WHERE  cart_area_code = ?	" 		                                                                                                                       	#@G00556


	PREPARE pr_del_cartarea FROM query_text


END FUNCTION ## sql_prepare_queries_WZ2_cartarea


#########################################################
# Open the QBE cursor,
# counts returned rows_count,
# OPEN the data set,
# FETCH first row
# inbound parameter: query predicate
# outbound parameters: number of rows retried
FUNCTION sql_get_qbe_count_cartarea(qry_stmt)
	DEFINE qry_stmt STRING
	DEFINE rec_cartarea STRING
	DEFINE rows_count integer
	DEFINE lsql_stmt_status integer


	# define primary_key record
	DEFINE l_pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00577
	END RECORD


	LET rec_cartarea = 
		"SELECT count(*) FROM cartarea",
		" WHERE ",qry_stmt CLIPPED


	PREPARE prp_cnt_cartarea FROM rec_cartarea
	DECLARE crs_cnt_cartarea CURSOR for prp_cnt_cartarea


	OPEN crs_cnt_cartarea
	SET ISOLATION TO DIRTY READ
	WHENEVER ERROR CONTINUE
	FETCH crs_cnt_cartarea INTO rows_count
	WHENEVER ERROR CALL error_mngmt
	SET ISOLATION TO COMMITTED READ


	# if FETCH fails, count = 0, the, get back to query
	IF sqlca.sqlcode OR rows_count = 0 THEN
		let rows_count =0
	END IF
	FREE crs_cnt_cartarea
	RETURN rows_count
END FUNCTION ## sql_get_qbe_count_cartarea


#########################################################
FUNCTION sql_opn_pky_scr_curs_cartarea(qry_stmt)
## Build the query generated by CONSTRUCT BY NAME,
## Declare and OPEN the cursor
## inbound param: query predicate
## outbound parameter: query status
	DEFINE qry_stmt STRING
	DEFINE rec_cartarea STRING
	DEFINE rows_count integer
	DEFINE lsql_stmt_status integer


	# define primary_key record
	DEFINE l_pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00615
	END RECORD


	# display the selected columns


	LET rec_cartarea = "SELECT 	cart_area_code
	",		                                                                                                                       	#@G00620
	" FROM cartarea ",
	"WHERE ",qry_stmt clipped,
	" ORDER BY 	cart_area_code
	"		                                                                                                                        	#@G00623


	PREPARE rech_crs_ FROM rec_cartarea


	# crs_scrl_crs_ : the first cursor selects all the primary keys (not all the table columns)


	DECLARE crs_scrl_crs_ SCROLL CURSOR 	WITH HOLD
	 FOR rech_crs_		                                                                                                           	#@G00629


	WHENEVER ERROR CONTINUE
	OPEN crs_scrl_crs_
	WHENEVER ERROR CALL error_mngmt


	RETURN sqlca.sqlcode
END FUNCTION ## sql_opn_pky_scr_curs_cartarea


#######################################################################
FUNCTION sql_nxtprev_cartarea(offset)
## sql_nxtprev_cartarea : FETCH NEXT OR PREVIOUS RECORD
	DEFINE offset SMALLINT
	define lsql_stmt_status,record_found integer
	DEFINE pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00644
	END RECORD
	DEFINE frm_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00647
	END RECORD


WHENEVER ERROR CONTINUE
	FETCH RELATIVE offset crs_scrl_crs_ INTO pky.*
WHENEVER ERROR CALL error_mngmt


	CASE 
	WHEN sqlca.sqlcode = 100 
		LET record_found = 0
		

	WHEN sqlca.sqlcode < 0 
		LET record_found = -1
	OTHERWISE
		LET lsql_stmt_status = 1
		LET record_found = 1
		#CALL sql_FETCH_full_row_cartarea (pky.*)
		#RETURNING record_found,frm_WZ2.*


	END CASE
	RETURN record_found,pky.*
END FUNCTION ## sql_nxtprev_cartarea


#########################################################################################
FUNCTION sql_FETCH_full_row_cartarea(pky_cartarea)
# sql_FETCH_full_row_cartarea : read a complete row accessing by primary key
# inbound parameter : primary key
# outbound parameter: sql_stmt_status and row contents
	DEFINE sql_stmt_status smallint
	DEFINE pky_cartarea RECORD 
	cart_area_code LIKE cartarea.cart_area_code # nchar(3)
			                                                                                                                         	#@G00677
	END RECORD
	DEFINE tbl_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00680
	END RECORD
	DEFINE frm_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00683
	END RECORD


	DEFINE lookup_status INTEGER
	DEFINE lku_company RECORD
		name_text LIKE company.name_text #  nvarchar(40)
	
	END RECORD
			                                                                                                                         	#@G00687


	# read the table, access on primary key
WHENEVER ERROR CONTINUE
	OPEN crs_row_cartarea 
	USING pky_cartarea.*


	FETCH crs_row_cartarea INTO tbl_WZ2.*


WHENEVER ERROR CALL error_mngmt
	CASE
	WHEN sqlca.sqlcode = 100 
		LET sql_stmt_status = 0
	WHEN sqlca.sqlcode < 0 
		LET sql_stmt_status = -1
	OTHERWISE
		LET sql_stmt_status = 1
		CALL set_form_record_WZ2(tbl_WZ2.*)
		RETURNING frm_WZ2.*


	END CASE
	RETURN sql_stmt_status,frm_WZ2.*
END FUNCTION ## sql_FETCH_full_row_cartarea


########################################################################
FUNCTION sql_Insert_cartarea(tbl_WZ2)
## INSERT in table cartarea 
	DEFINE lsql_stmt_status integer
	DEFINE rows_count SMALLINT
	DEFINE pky RECORD
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00717
	END RECORD
	DEFINE tbl_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00720
	END RECORD
WHENEVER ERROR CONTINUE
	EXECUTE pr_ins_cartarea 
	USING 	tbl_WZ2.cmpy_code,
	tbl_WZ2.cart_area_code,
	tbl_WZ2.desc_text
			                                                                                                                         	#@G00724
WHENEVER ERROR CALL error_mngmt


	IF sqlca.sqlcode < 0 THEN 
		LET lsql_stmt_status = -1
	ELSE 
		LET lsql_stmt_status = 0
				                                                                                                                         	#@G00731


	END IF
	RETURN lsql_stmt_status,pky.*
END FUNCTION ## sql_Insert_cartarea


########################################################################
FUNCTION sql_Edit_cartarea(pky,tbl_WZ2)
## sql_Edit_cartarea :update cartarea record
	DEFINE lsql_stmt_status integer
	DEFINE pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00742
	END RECORD
	DEFINE tbl_WZ2 RECORD 
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00745
	END RECORD


WHENEVER ERROR CONTINUE
	EXECUTE pr_upd_cartarea 
	USING 	tbl_WZ2.cmpy_code,
	tbl_WZ2.desc_text
	,		                                                                                                                        	#@G00750
	pky.*


WHENEVER ERROR CALL error_mngmt
	IF sqlca.sqlcode < 0 THEN 
		LET lsql_stmt_status = -1
	ELSE 
		LET lsql_stmt_status = 0
	END IF
	RETURN lsql_stmt_status
END FUNCTION ## sql_Edit_cartarea


##############################################################################################
FUNCTION sql_Delete_cartarea(pky)
## sql_Delete_cartarea :delete current row in table cartarea 
	DEFINE lsql_stmt_status smallint
	DEFINE pky RECORD 
	cart_area_code LIKE cartarea.cart_area_code # nchar(3)
			                                                                                                                         	#@G00767
END RECORD


WHENEVER ERROR CONTINUE
	EXECUTE pr_del_cartarea 
	USING pky.*


WHENEVER ERROR CALL error_mngmt
	IF sqlca.sqlcode < 0 THEN 
		LET lsql_stmt_status = -1
	ELSE
		LET lsql_stmt_status=0
	END IF
	RETURN lsql_stmt_status
END FUNCTION ## sql_Delete_cartarea


################################################################################
FUNCTION sql_status_pk_cartarea(pky)  
##   sql_status_pk_cartarea : Check if primary key exists
## inbound parameter : record of primary key
## outbound parameter:  status > 0 if exists, 0 if no record, < 0 if error
	DEFINE pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00789
	END RECORD
	DEFINE pk_status INTEGER


WHENEVER ERROR CONTINUE
	OPEN crs_pky_cartarea USING pky.*
	FETCH crs_pky_cartarea 
WHENEVER ERROR CALL error_mngmt


	CASE sqlca.sqlcode
	WHEN 0 
		let pk_status = 1
	WHEN 100
		let pk_status = 0
	WHEN sqlca.sqlerrd[2] = 104
		let pk_status = -1 # record locked
	WHEN sqlca.sqlcode < 0
		let pk_status = sqlca.sqlcode
	END CASE


	RETURN pk_status
END FUNCTION ## sql_status_pk_cartarea


################################################################################################
FUNCTION set_form_record_WZ2(tbl_contents)
## set_form_record_WZ2_WZ2: assigns table values to form fields values
	DEFINE frm_contents RECORD
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00816
	END RECORD


	DEFINE tbl_contents RECORD
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00820
	END RECORD


	INITIALIZE frm_contents.* TO NULL
	LET frm_contents.cmpy_code = tbl_contents.cmpy_code
	LET frm_contents.cart_area_code = tbl_contents.cart_area_code
	LET frm_contents.desc_text = tbl_contents.desc_text
			                                                                                                                         	#@G00827
	RETURN frm_contents.*
END FUNCTION ## set_form_recordWZ2_WZ2


################################################################################################
FUNCTION set_table_record_WZ2_cartarea(sql_stmt,frm_contents)
## set_table_record_WZ2_cartarea: assigns form fields value to table values
	DEFINE sql_stmt SMALLINT # 1 => Insert, 2 => Update
	DEFINE pky RECORD 
		cart_area_code LIKE cartarea.cart_area_code # nchar(3)
				                                                                                                                         	#@G00836
	END RECORD


	DEFINE frm_contents RECORD
		cmpy_code LIKE cartarea.cmpy_code, #  nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, #  nchar(3)
		desc_text LIKE cartarea.desc_text #  nvarchar(40)
				                                                                                                                         	#@G00840
	END RECORD


	DEFINE tbl_contents RECORD
		cmpy_code LIKE cartarea.cmpy_code, # nchar(2)
		cart_area_code LIKE cartarea.cart_area_code, # nchar(3)
		desc_text LIKE cartarea.desc_text # nvarchar(40)
				                                                                                                                         	#@G00844
	END RECORD


	INITIALIZE tbl_contents.* TO NULL
	LET tbl_contents.cmpy_code = frm_contents.cmpy_code
	LET tbl_contents.cart_area_code = frm_contents.cart_area_code
	LET tbl_contents.desc_text = frm_contents.desc_text
			                                                                                                                         	#@G00851


	RETURN tbl_contents.*
END FUNCTION ## set_table_recordWZ2_cartarea


		                                                                                                                         	#@G00856


		                                                                                                                         	#@G00858


		                                                                                                                         	#@G00860


		                                                                                                                         	#@G00862
